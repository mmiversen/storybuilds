{
  "schema_version": 27,
  "standard_lib_version": 83,
  "action_runtime_version": 42,
  "name": "Take My Meeting! - External",
  "description": null,
  "guid": "7ec6bae6c3732955412b9c208a45f0db",
  "slug": "take_my_meeting_external",
  "agents": [
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Get a channel's members",
      "disabled": false,
      "description": "Get the list of members involved in a specific conversation.\n\nLink to documentation: https://api.slack.com/methods/conversations.members\n\nRequired scope(s): channels:read, groups:read, im:read, mpim:read\nPlease note: the required scope needed is relevant to the type of conversation you would like to list members of. For example, if you only need to list members of a public channel, then you do not need other scopes beyond channels:read.",
      "guid": "18b18cb9da7839b7f7b7594af2a6edea",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://slack.com/api/conversations.members",
        "content_type": "form",
        "method": "get",
        "payload": "=LOCAL.final_payload",
        "local": {
          "all_parameters": {
            "channel": "=INPUT.channel_id",
            "cursor": "=INPUT.cursor",
            "limit": "=INPUT.limit"
          },
          "final_payload": "=REJECT(\n  LOCAL.all_parameters,\n  LAMBDA(\n    item,\n    OR(\n      item = NULL,\n      IF(\n        OR(\n          TYPE(item) = \"TrueClass\",\n          TYPE(item) = \"FalseClass\",\n          TYPE(item) = \"Integer\"\n        ),\n        IS_EMPTY(TEXT(item)),\n        IS_EMPTY(item)\n      )\n    )\n  )\n)"
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "637fc37afbec35b0c710feefe17540859f765478b6bb7ec23b04c562f257fc05",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Get user profile",
      "disabled": false,
      "description": "Retrieve a user's profile details, including their custom status.\n\nLink to documentation: https://api.slack.com/methods/users.profile.get\n\nRequired scope(s): users.profile:read",
      "guid": "678af7fcf1f6ec127109efd42a8c8587",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://slack.com/api/users.profile.get",
        "content_type": "form",
        "method": "get",
        "payload": "=LOCAL.final_payload",
        "local": {
          "all_parameters": {
            "include_labels": "=INPUT.include_labels",
            "user": "=INPUT.user"
          },
          "final_payload": "=REJECT(\n  LOCAL.all_parameters,\n  LAMBDA(\n    item,\n    OR(\n      item = NULL,\n      IF(\n        OR(\n          TYPE(item) = \"TrueClass\",\n          TYPE(item) = \"FalseClass\",\n          TYPE(item) = \"Integer\"\n        ),\n        IS_EMPTY(TEXT(item)),\n        IS_EMPTY(item)\n      )\n    )\n  )\n)"
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "644aef9a11ed559036dc31d0edf0da79cc2a55094ccb1ce09a09d2378b509021",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Explode Member",
      "disabled": false,
      "description": null,
      "guid": "0b664099c360e480120041f6bd73f2ec",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "explode",
        "path": "=get_a_channel_s_members.body.members",
        "to": "member",
        "limit": "500"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Are they a team member?",
      "disabled": false,
      "description": null,
      "guid": "72e81bcbe53ee05c22e4e3b54f6eb986",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "rules": [
          {
            "path": "=get_user_profile.body.profile.title",
            "type": "in",
            "value": "Engineer"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::WebhookAgent",
      "name": "Webhook Action?",
      "disabled": false,
      "description": null,
      "guid": "61cf547538ae2e8741522256a286c22b",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "path": "81f8db67cd33bf03cc6b37c25576a056",
        "secret": "09aefd010faaea0738eae457c71695ed",
        "verbs": "get,post"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Capture Record",
      "disabled": false,
      "description": null,
      "guid": "2ea99c372a831d452fe8a8ce657f1b80",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "parent": "",
        "case_ids": "",
        "mode": "create"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<get_user_profile.body.profile.real_name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<get_user_profile.body.profile.email>>",
          "include_in_update": false,
          "record_field": {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<explode_member.individual_item>>",
          "include_in_update": false,
          "record_field": {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<SWITCH(\n  TRUE,\n  INCLUDES(search_member_by_email.body.user.tz_label, \"Pacific\") OR(INCLUDES(search_member_by_email.body.user.tz_label, \"Mountain\")) \nOR(INCLUDES(search_member_by_email.body.user.tz_label, \"Central\")), \"West\",\n  INCLUDES(search_member_by_email.body.user.tz_label, \"Eastern\"), \"East\",\n  INCLUDES(search_member_by_email.body.user.tz_label, \"British\"), \"EMEA\",\n  \"Other\"\n)>>",
          "include_in_update": false,
          "record_field": {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18331,
        "name": "Current CSEs",
        "editable": true,
        "record_fields": [
          {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Search member by email",
      "disabled": false,
      "description": "Retrieve a single user by looking them up by their registered email address.\n\nLink to documentation: https://api.slack.com/methods/users.lookupByEmail\n\nRequired scope: users:read.email",
      "guid": "e5fd916f7e28f4d03edf1be15e30fe69",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://slack.com/api/users.lookupByEmail",
        "content_type": "json; charset=utf-8",
        "method": "get",
        "payload": {
          "email": "<<INPUT.email>>"
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "b0067e43344b6624c5920d6f3bd2e4cf1fceb3e986602775c1173e3f52d172d1",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::FormAgent",
      "name": "Pick Dates",
      "disabled": false,
      "description": null,
      "guid": "c379d10692b4181a9e7d1204c0325e39",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "fields": "",
        "mode": "story_run",
        "visibility": "tenant",
        "anonymize": false,
        "auto_submit": false,
        "page_logo": {
          "contents": "iVBORw0KGgoAAAANSUhEUgAAAFQAAAAYCAYAAABk8drWAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAARCSURBVHgB7VhLctpAEB1k7LVyA/kEgRMEn8BQ5e8qcALjE1icAPsEkJW/VeATwA1QTmDlBCE7l3/kPblbTIiMJcVOeaFXBRrN9Mz0vOnu6ZExBQoUKFCgwAdByX4ZDAbuw8PDwWw2a+LVk+rAcZxgZWWl02g0QpMSl5eXXRlnvLq62kLfqcmIi4uLZqlU+lwulztJ/aGvJ/p+39nZ6cu8R3j30c/f3t7umP8MRwtXV1df7+/vb6iMmZNJVJ6enppom5ydnbVNCpAIjENZF786Fn1kMgLE1PDocRz0HyTJQKe2zNOjMbBO3o1sZgS2Ybw29KqYd0ZEKMg8AGl980zAS3BhqV0Sv0Qmsho8/iCQi5T6XED/WtJmoj7W9/b2Vgk9gXUGWM+JtoF4H/VdFEdK/HvB4UIxuZ+2A2SPlykFayLhXkJ9z/wDsJlHaTZld3fXR4ho7O3tHWudRbyrxC+Ca+L4rxFuyXlJ7c7j4yOtKcuuuXd3d+0XJvMkZPwFWpm4cV64sLTBawuGB/UYus7Pz7vUB3NOYLGxV+EsuIHrT2ydITNCn5/sxyfaKdO0x02Qo8wNY7Yt52ChmeOKraAN2ZxlyBxLZb6xFCuvxWN4UE361PGYYn1egli0KSQJxIy42VIfso959rCehplFOYYUkY0MCJvn68C5CDUJLi2ho7msExVa3Pk0QL9veJxIuZ3W0pkZIMNYR3GodSBjA3VVlsUAPK1HprCOuqoQpmHGRV3FzNfcQvZQpSx06YjcFx3fMW8E7mBK0W6egwEk+ObZKkjqIO0hR1Ih/0vfYeGhpmAwgLpUX4OkMQv7+/shCNV0i+GtBrlYX5Kn2QLjNTeCMVvby6KkZ7IhsF/E6jyTDhqDfZMBJAHzUHHGP1cOuR8mJ05PTz0zPzs2MfZM20BgLAfCXGzmEAYTWbN4YRPy3JQxNusauo1V3hF3yopg4T1TbISSB3nSKLhZgL6HLDN8oLxp3ga8vPSTfnD3MTcTzw1ypeHASI6NX88+5Jy1tTWmF1luMRw8voHIKeeZbHBTHGCJgGseW4dU7pySrm3m6w62trZa9o/kQcdrkTNwaw9c8fZVhcV+oqtb5FY0DDgSTw7TKgKT7+gkhH0jyQK6Tt4kG+7eMtmMIAasLj6ELULqtsfw8oJ1jdA+YGjgLYvvPCcoR84Yc63+UWiIxucf78HiSsuUZFvLTpgF73rzSAI3FMS0MnQJtUCSmD/KdwvdGFfyygnb5NZIBGI8ShzTpwnzUcpaWU2oh1p8ytOVmDIsxIlImOkB0w/9AGFDFhaabJhCmcNlH0zgYoGxXHKxHW451LSF86vXQPdQ6sYqy7BmhYlofs7NPpImaZumR5y3jzVvsFLI0nW6ko9WRG6oaVg0v/nA0JCwjHhx1aktw3jGA+yF8dykr2ZisRVsZLg4XpIcSGWOG+b5ilagQIECBZLxG5sJ41WbSDouAAAAAElFTkSuQmCC\n",
          "display_logo": false,
          "name": "nites.jpeg",
          "type": "image/jpeg"
        },
        "page_width": "auto",
        "pages_action_color": "#25cc73",
        "pages_appearance_mode": "light",
        "pages_background_color": "#efae86",
        "loading_message": "Please wait…",
        "url_identifier": "df978e52706a4c317429983b3c02436d"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::FormAgent",
      "name": "Choose Events",
      "disabled": false,
      "description": null,
      "guid": "6ed2cfe467234be6a2eb1a7d01e4006c",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "fields": "",
        "mode": "story_run",
        "visibility": "tenant",
        "anonymize": false,
        "auto_submit": false,
        "page_logo": {
          "contents": "iVBORw0KGgoAAAANSUhEUgAAAFQAAAAYCAYAAABk8drWAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAARCSURBVHgB7VhLctpAEB1k7LVyA/kEgRMEn8BQ5e8qcALjE1icAPsEkJW/VeATwA1QTmDlBCE7l3/kPblbTIiMJcVOeaFXBRrN9Mz0vOnu6ZExBQoUKFCgwAdByX4ZDAbuw8PDwWw2a+LVk+rAcZxgZWWl02g0QpMSl5eXXRlnvLq62kLfqcmIi4uLZqlU+lwulztJ/aGvJ/p+39nZ6cu8R3j30c/f3t7umP8MRwtXV1df7+/vb6iMmZNJVJ6enppom5ydnbVNCpAIjENZF786Fn1kMgLE1PDocRz0HyTJQKe2zNOjMbBO3o1sZgS2Ybw29KqYd0ZEKMg8AGl980zAS3BhqV0Sv0Qmsho8/iCQi5T6XED/WtJmoj7W9/b2Vgk9gXUGWM+JtoF4H/VdFEdK/HvB4UIxuZ+2A2SPlykFayLhXkJ9z/wDsJlHaTZld3fXR4ho7O3tHWudRbyrxC+Ca+L4rxFuyXlJ7c7j4yOtKcuuuXd3d+0XJvMkZPwFWpm4cV64sLTBawuGB/UYus7Pz7vUB3NOYLGxV+EsuIHrT2ydITNCn5/sxyfaKdO0x02Qo8wNY7Yt52ChmeOKraAN2ZxlyBxLZb6xFCuvxWN4UE361PGYYn1egli0KSQJxIy42VIfso959rCehplFOYYUkY0MCJvn68C5CDUJLi2ho7msExVa3Pk0QL9veJxIuZ3W0pkZIMNYR3GodSBjA3VVlsUAPK1HprCOuqoQpmHGRV3FzNfcQvZQpSx06YjcFx3fMW8E7mBK0W6egwEk+ObZKkjqIO0hR1Ih/0vfYeGhpmAwgLpUX4OkMQv7+/shCNV0i+GtBrlYX5Kn2QLjNTeCMVvby6KkZ7IhsF/E6jyTDhqDfZMBJAHzUHHGP1cOuR8mJ05PTz0zPzs2MfZM20BgLAfCXGzmEAYTWbN4YRPy3JQxNusauo1V3hF3yopg4T1TbISSB3nSKLhZgL6HLDN8oLxp3ga8vPSTfnD3MTcTzw1ypeHASI6NX88+5Jy1tTWmF1luMRw8voHIKeeZbHBTHGCJgGseW4dU7pySrm3m6w62trZa9o/kQcdrkTNwaw9c8fZVhcV+oqtb5FY0DDgSTw7TKgKT7+gkhH0jyQK6Tt4kG+7eMtmMIAasLj6ELULqtsfw8oJ1jdA+YGjgLYvvPCcoR84Yc63+UWiIxucf78HiSsuUZFvLTpgF73rzSAI3FMS0MnQJtUCSmD/KdwvdGFfyygnb5NZIBGI8ShzTpwnzUcpaWU2oh1p8ytOVmDIsxIlImOkB0w/9AGFDFhaabJhCmcNlH0zgYoGxXHKxHW451LSF86vXQPdQ6sYqy7BmhYlofs7NPpImaZumR5y3jzVvsFLI0nW6ko9WRG6oaVg0v/nA0JCwjHhx1aktw3jGA+yF8dykr2ZisRVsZLg4XpIcSGWOG+b5ilagQIECBZLxG5sJ41WbSDouAAAAAElFTkSuQmCC\n",
          "display_logo": false,
          "name": "nites.jpeg",
          "type": "image/jpeg"
        },
        "page_width": "large",
        "pages_action_color": "#25cc73",
        "pages_appearance_mode": "light",
        "pages_background_color": "#efae86",
        "loading_message": "Please wait…",
        "url_identifier": "ce0b1092a3ca2c6a58667aafc27335a5"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "List PTO Events",
      "disabled": false,
      "description": "Returns events on the specified calendar. \n\nLink to documentation: \nhttps://developers.google.com/calendar/api/v3/reference/events/list\n\nRequired scope(s): https://www.googleapis.com/auth/calendar.readonly\n\nPlease note: the above scope lists the least privileged scope needed. Follow the link to documentation to view higher privileged scopes.",
      "guid": "010a612461f23138710621fdc2cb1644",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://www.googleapis.com/calendar/v3/calendars/<<INPUT.calendar_id>>/events",
        "content_type": "application_json",
        "method": "get",
        "headers": {
          "Authorization": "Bearer <<INPUT.google_calendar_credential>>"
        },
        "payload": "=LOCAL.final_payload",
        "local": {
          "optional_parameters": {
            "eventTypes": "=INPUT.event_types[0]",
            "iCalUID": "=INPUT.ical_uid",
            "maxAttendees": "=INPUT.max_attendees",
            "maxResults": "=INPUT.max_results",
            "orderBy": "=INPUT.order_by[0]",
            "pageToken": "=INPUT.page_token",
            "privateExtendedProperty": "=INPUT.private_extended_property",
            "q": "=INPUT.q",
            "sharedExtendedProperty": "=INPUT.shared_extended_property",
            "showDeleted": "=INPUT.show_deleted",
            "showHiddenInvitations": "=INPUT.show_hidden_invitations",
            "singleEvents": "=INPUT.single_events",
            "syncToken": "=INPUT.sync_token",
            "timeMax": "=DATE(INPUT.time_max, \"%FT%TZ\")",
            "timeMin": "=DATE(INPUT.time_min, \"%FT%TZ\")",
            "timeZone": "=INPUT.time_zone",
            "updatedMin": "=DATE(INPUT.updated_min, \"%FT%TZ\")"
          },
          "final_payload": "=REJECT(\n  LOCAL.optional_parameters,\n  LAMBDA(\n    item,\n    OR(\n      item = NULL,\n      IF(\n        OR(\n          TYPE(item) = \"TrueClass\",\n          TYPE(item) = \"FalseClass\",\n          TYPE(item) = \"Integer\"\n        ),\n        IS_EMPTY(TEXT(item)),\n        IS_EMPTY(item)\n      )\n    )\n  )\n)"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "2102a268e5c62344c9846459fcea1e9a6cf850585dab0df530c5235044d043c7",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Trigger Action",
      "disabled": false,
      "description": null,
      "guid": "f20bfee4d0512bc6138f214e323ba778",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "rules": [
          {
            "type": "field==value",
            "value": "Submit",
            "path": "<<choose_events.body.button>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "get values",
      "disabled": false,
      "description": null,
      "guid": "1dc0d01ecc42110493f34c5879815f53",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "message_only",
        "loop": "=list_pto_events.body.items",
        "payload": {
          "T_Title": "<<LOOP.value.summary>>",
          "Date": "<<DATE(LOOP.value.start.dateTime, \"%b %d - %a\")>>",
          "T_Start_Time": "<<DATE(LOOP.value.start.dateTime, \"%r %Z\", list_pto_events.body.timeZone)>>",
          "T_End_Time": "<<DATE(LOOP.value.end.dateTime, \"%r %Z\",list_pto_events.body.timeZone)>>",
          "T_Meeting Organizer": "<<LOOP.value.organizer.email>>",
          "id": "<<LOOP.value.id>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Get Submitter Timezone",
      "disabled": false,
      "description": null,
      "guid": "3a1c1db1641f33bb757eb839aab678b0",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "list",
        "filters": "[{\"definition_id\":\"56679\",\"operator\":\"EQUAL\",\"value\":\"<<IF(welcome_page.body.button = \\\"Next\\\",pick_dates.headers.email,pick_dates.body.email)>>\"}]"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18331,
        "name": "Current CSEs",
        "editable": true,
        "record_fields": [
          {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "sort",
      "disabled": false,
      "description": null,
      "guid": "707ba6e3075e9ac247dd4ae039341dd3",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "message_only",
        "loop": false,
        "payload": "=SORT(SORT(get_values,'Start Time'),'Date')"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Get Choosen Data Formatting",
      "disabled": false,
      "description": null,
      "guid": "cd729ad4a8e5f54a947e58a3b1964e3d",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "message_only",
        "loop": "=choose_events.body.google_calendar_events",
        "payload": "=FILTER(list_pto_events.body.items, LAMBDA(value, value.id = LOCAL.PTO_meeting_id))",
        "local": {
          "PTO_meeting_id": "<<LOOP.value.id>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Get Current CSEs",
      "disabled": false,
      "description": null,
      "guid": "35cb4172497d148d0d00314472cf6c45",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "list",
        "filters": "[{\"definition_id\":\"56682\",\"operator\":\"EQUAL\",\"value\":\"<<get_submitter_timezone.records[0]['Location Area']>>\"},{\"definition_id\":\"56678\",\"operator\":\"NOT_EQUAL\",\"value\":\"<<get_submitter_timezone.records[0]['real_name']>>\"}]"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18331,
        "name": "Current CSEs",
        "editable": true,
        "record_fields": [
          {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Get CSEs in Timezone",
      "disabled": false,
      "description": null,
      "guid": "9f2fbcb1153ca1c5669f1aeda28902ff",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "message_only",
        "loop": "=get_current_cses.records",
        "payload": "<@<<LOOP.value.user_id>>>"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::FormAgent",
      "name": "Welcome Page",
      "disabled": false,
      "description": null,
      "guid": "4c40f372d37f3d3e718111062c4dcdb6",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "fields": "",
        "mode": "story_run",
        "visibility": "tenant",
        "anonymize": false,
        "auto_submit": false,
        "page_logo": null,
        "page_width": "auto",
        "pages_action_color": "#25cc73",
        "pages_appearance_mode": "light",
        "pages_background_color": "#efae86",
        "loading_message": "Please wait…",
        "url_identifier": "8263a8cbd322309cfc7faa66a38e9f33"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Pick a random intro",
      "disabled": false,
      "description": null,
      "guid": "2a6bd61052d2fcd9d873d91c46de4bbf",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "message_only",
        "loop": false,
        "payload": "=RANDOM_ELEMENT(LOCAL.Intro)",
        "local": {
          "Intro": [
            "Beach, Please… Cover My Meetings",
            "Sun’s Out, Meetings Out (of Your Hands)",
            "Need PTO Coverage? Let’s Make It Easy.",
            "🌴 Out of Office, Out of Worries 🌴"
          ],
          "??": "<<concat>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::FormAgent",
      "name": "Hollow Home",
      "disabled": false,
      "description": null,
      "guid": "ef7dd81313c24cf0f5da0162087e750f",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "fields": "",
        "mode": "story_run",
        "visibility": "tenant",
        "anonymize": false,
        "auto_submit": true,
        "page_logo": {
          "contents": "iVBORw0KGgoAAAANSUhEUgAAAFQAAAAYCAYAAABk8drWAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAARCSURBVHgB7VhLctpAEB1k7LVyA/kEgRMEn8BQ5e8qcALjE1icAPsEkJW/VeATwA1QTmDlBCE7l3/kPblbTIiMJcVOeaFXBRrN9Mz0vOnu6ZExBQoUKFCgwAdByX4ZDAbuw8PDwWw2a+LVk+rAcZxgZWWl02g0QpMSl5eXXRlnvLq62kLfqcmIi4uLZqlU+lwulztJ/aGvJ/p+39nZ6cu8R3j30c/f3t7umP8MRwtXV1df7+/vb6iMmZNJVJ6enppom5ydnbVNCpAIjENZF786Fn1kMgLE1PDocRz0HyTJQKe2zNOjMbBO3o1sZgS2Ybw29KqYd0ZEKMg8AGl980zAS3BhqV0Sv0Qmsho8/iCQi5T6XED/WtJmoj7W9/b2Vgk9gXUGWM+JtoF4H/VdFEdK/HvB4UIxuZ+2A2SPlykFayLhXkJ9z/wDsJlHaTZld3fXR4ho7O3tHWudRbyrxC+Ca+L4rxFuyXlJ7c7j4yOtKcuuuXd3d+0XJvMkZPwFWpm4cV64sLTBawuGB/UYus7Pz7vUB3NOYLGxV+EsuIHrT2ydITNCn5/sxyfaKdO0x02Qo8wNY7Yt52ChmeOKraAN2ZxlyBxLZb6xFCuvxWN4UE361PGYYn1egli0KSQJxIy42VIfso959rCehplFOYYUkY0MCJvn68C5CDUJLi2ho7msExVa3Pk0QL9veJxIuZ3W0pkZIMNYR3GodSBjA3VVlsUAPK1HprCOuqoQpmHGRV3FzNfcQvZQpSx06YjcFx3fMW8E7mBK0W6egwEk+ObZKkjqIO0hR1Ih/0vfYeGhpmAwgLpUX4OkMQv7+/shCNV0i+GtBrlYX5Kn2QLjNTeCMVvby6KkZ7IhsF/E6jyTDhqDfZMBJAHzUHHGP1cOuR8mJ05PTz0zPzs2MfZM20BgLAfCXGzmEAYTWbN4YRPy3JQxNusauo1V3hF3yopg4T1TbISSB3nSKLhZgL6HLDN8oLxp3ga8vPSTfnD3MTcTzw1ypeHASI6NX88+5Jy1tTWmF1luMRw8voHIKeeZbHBTHGCJgGseW4dU7pySrm3m6w62trZa9o/kQcdrkTNwaw9c8fZVhcV+oqtb5FY0DDgSTw7TKgKT7+gkhH0jyQK6Tt4kG+7eMtmMIAasLj6ELULqtsfw8oJ1jdA+YGjgLYvvPCcoR84Yc63+UWiIxucf78HiSsuUZFvLTpgF73rzSAI3FMS0MnQJtUCSmD/KdwvdGFfyygnb5NZIBGI8ShzTpwnzUcpaWU2oh1p8ytOVmDIsxIlImOkB0w/9AGFDFhaabJhCmcNlH0zgYoGxXHKxHW451LSF86vXQPdQ6sYqy7BmhYlofs7NPpImaZumR5y3jzVvsFLI0nW6ko9WRG6oaVg0v/nA0JCwjHhx1aktw3jGA+yF8dykr2ZisRVsZLg4XpIcSGWOG+b5ilagQIECBZLxG5sJ41WbSDouAAAAAElFTkSuQmCC\n",
          "display_logo": false,
          "name": "nites.jpeg",
          "type": "image/jpeg"
        },
        "page_width": "large",
        "pages_action_color": "#25cc73",
        "pages_appearance_mode": "light",
        "pages_background_color": "#efae86",
        "auto_close_tab_on_submit": false,
        "url_identifier": "8cd2c045ae99a5dc7f9ee874bdb2efab",
        "loading_message": "Please wait…",
        "auto_submit_time": "immediately"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Get Current CSEs",
      "disabled": false,
      "description": null,
      "guid": "88d851893f3576b669f834bf0bc2985e",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "list",
        "filters": "[]"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18331,
        "name": "Current CSEs",
        "editable": true,
        "record_fields": [
          {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Get Meeting Emails",
      "disabled": false,
      "description": null,
      "guid": "e8af1ddb1cf65c0e704f8a3d20a8666f",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "message_only",
        "loop": "=get_current_cses.records",
        "payload": "=LOOP.value.email"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Explode Meeting Emails",
      "disabled": false,
      "description": null,
      "guid": "c6ea20ae73156a4c4281dfe9dc56598c",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "explode",
        "path": "=get_meeting_emails",
        "to": "individual_item",
        "limit": "500"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Search user by email",
      "disabled": false,
      "description": "Retrieve a single user by looking them up by their registered email address.\n\nLink to documentation: https://api.slack.com/methods/users.lookupByEmail\n\nRequired scope: users:read.email",
      "guid": "fb4d50027f09ab5bfd9b18802ba7c302",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://slack.com/api/users.lookupByEmail",
        "content_type": "json; charset=utf-8",
        "method": "get",
        "payload": {
          "email": "<<INPUT.email>>"
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "b0067e43344b6624c5920d6f3bd2e4cf1fceb3e986602775c1173e3f52d172d1",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Event Transform Action",
      "disabled": false,
      "description": null,
      "guid": "ad394ae2d8ef6ab244aaa071cdedcbda",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "implode",
        "item_path": "=explode_meeting_emails.individual_item",
        "guid_path": "=explode_meeting_emails.guid",
        "size_path": "=explode_meeting_emails.size"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Event Data",
      "disabled": false,
      "description": null,
      "guid": "7dc9d0c4b96368b57c67aeddc594e452",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "message_only",
        "loop": false,
        "payload": {
          "PTO_events": "<<FLATTEN(get_choosen_data_formatting)>>",
          "heading": {
            "type": "header",
            "text": {
              "type": "plain_text",
              "text": "<<LOCAL.PTO_Poster>> is taking PTO and needs your help!",
              "emoji": true
            }
          },
          "CSE_takers": {
            "type": "section",
            "text": {
              "type": "mrkdwn",
              "text": "<<LOCAL.CSEs>>, any takers?"
            }
          }
        },
        "local": {
          "PTO_Poster": "<<get_submitter_timezone.records[0].real_name>>",
          "header": "\"type\": \"header\",\n                    \"text\": {\n                        \"type\": \"plain_text\",\n                        \"text\": \"<<LOCAL.PTO_Poster>> is taking PTO and needs your help!\",\n                        \"emoji\": True",
          "CSEs": "<<JOIN(get_cses_in_timezone,\" \")>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RunScriptAgent",
      "name": "Display PTO Events",
      "disabled": false,
      "description": null,
      "guid": "6802b71ae51e8d1b21b69e2aa46519ff",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "language": "python",
        "timeout": 10,
        "script": "import json\nfrom datetime import datetime, timezone\nimport pytz\n\ndef parse_to_utc(dt_str: str) -> datetime:\n    \"\"\"Parse an ISO 8601 datetime string to a UTC datetime object.\"\"\"\n    if dt_str.endswith('Z'):\n        dt_str = dt_str[:-1] + '+00:00'\n\n    try:\n        dt = datetime.fromisoformat(dt_str)\n    except ValueError:\n        raise ValueError(f\"Invalid datetime format: {dt_str}\")\n\n    if dt.tzinfo is None:\n        dt = dt.replace(tzinfo=timezone.utc)\n\n    return dt.astimezone(timezone.utc)\n\ndef slack_date_format(dt: datetime, label=\"\") -> str:\n    \"\"\"Format a datetime for Slack's date formatting.\"\"\"\n    utc_ts = int(dt.astimezone(timezone.utc).timestamp())\n    fallback_text = dt.astimezone(timezone.utc).strftime('%Y-%m-%d %I:%M:%S %p UTC')\n\n    if label:\n        return f\"{label} <!date^{utc_ts}^<<date_short_pretty>> <<time>>|{fallback_text}>\"\n    else:\n        return f\"<!date^{utc_ts}^<<time>>|{fallback_text}>\"\n\ndef format_date_if_different(start_dt: datetime, end_dt: datetime) -> str:\n    \"\"\"Format a date range using Slack's date formatting.\"\"\"\n    start_utc = start_dt.astimezone(timezone.utc)\n    end_utc = end_dt.astimezone(timezone.utc)\n    \n    start_formatted = slack_date_format(start_utc, label=\"For\")\n    end_formatted = slack_date_format(end_utc, label=\"\")\n\n    return f\"{start_formatted} - {end_formatted}\"\n\ndef main(input_data: dict) -> dict:\n    \"\"\"Main function to process PTO events and generate Slack messages.\"\"\"\n    pto_events_str = input_data.get('PTO_events', '[]')\n    try:\n        pto_events = json.loads(pto_events_str)\n    except json.JSONDecodeError:\n        raise ValueError(\"Invalid JSON format for PTO events.\")\n\n    # Sort PTO events by start time\n    pto_events.sort(key=lambda e: parse_to_utc(e.get('start', {}).get('dateTime', '9999-12-31T23:59:59Z')))\n\n    # Set default header and member takers\n    header = input_data.get(\n        'heading', \n        {\"type\": \"section\", \"text\": {\"type\": \"plain_text\", \"text\": \"Someone is taking PTO!\", \"emoji\": True}}\n    )\n    member_takers = input_data.get('member_takers')\n\n    all_messages = [\n        {\"blocks\": [header, member_takers], \"text\": \"PTO coverage request\", \"meeting_id\": \"header\", \"action_id\": \"header\"}\n    ]\n\n    for idx, event in enumerate(pto_events, start=1):\n        start_raw = event.get('start', {}).get('dateTime')\n        end_raw = event.get('end', {}).get('dateTime')\n\n        if not start_raw or not end_raw:\n            continue\n\n        pto_start = parse_to_utc(start_raw)\n        pto_end = parse_to_utc(end_raw)\n        formatted_time_range = format_date_if_different(pto_start, pto_end)\n\n        action_id = f\"action_{idx}\"\n        details_id = f\"detail_{idx}\"\n        cancel_action_id = f\"cancel_{idx}\"\n\n        event_message = {\n            \"blocks\": [\n                {\n                    \"type\": \"section\",\n                    \"text\": {\n                        \"type\": \"mrkdwn\",\n                        \"text\": f\"*{event.get('summary', 'PTO Event')}*\\n{formatted_time_range}\"\n                    }\n                },\n                {\n                    \"type\": \"actions\",\n                    \"elements\": [\n                        {\n                            \"type\": \"button\",\n                            \"text\": {\n                                \"type\": \"plain_text\",\n                                \"text\": \"I'll take it!\",\n                                \"emoji\": True\n                            },\n                            \"value\": \"take it\",\n                            \"style\": \"primary\",\n                            \"action_id\": action_id\n                        },\n                            {\n                              \"type\": \"button\",\n                              \"text\": {\n                                \"type\": \"plain_text\",\n                                \"text\": \"More Info\",\n                                \"emoji\": True\n                              },\n                              \"value\": \"Details\",\n                              \"action_id\": details_id\n                            }\n                    ]\n                }\n            ],\n            \"text\": f\"PTO Event: {event.get('summary', 'PTO Event')}\",\n            \"meeting_id\": event.get('id', 'Unknown Event'),\n            \"action_id\": action_id,\n            \"URL_link\": event.get('htmlLink', '')\n        }\n\n        all_messages.append(event_message)\n\n    return {\"messages\": all_messages}",
        "input": "=event_data",
        "requirements": "pytz"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Parse the Takers",
      "disabled": false,
      "description": null,
      "guid": "23608b14c45847c0a1ed5105bd124ab9",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "message_only",
        "loop": false,
        "payload": "=JSON_PARSE(webhook_action.body.output)"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "HTTP Request Action",
      "disabled": false,
      "description": null,
      "guid": "888781a92d95eaae9d9339f835c5dabd",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "<<parse_the_takers.response.response_url>>",
        "content_type": "application_json",
        "method": "post",
        "payload": "=update_cse_block",
        "headers": {
          "Content-type": "application/json",
          "Authorization": "Bearer <<CREDENTIAL.your_slack_bot_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Get an event",
      "disabled": false,
      "description": "Returns an event based on its Google Calendar ID. \n\nLink to documentation: \nhttps://developers.google.com/calendar/api/v3/reference/events/get\n\nRequired scope(s): https://www.googleapis.com/auth/calendar.readonly\n\nPlease note: the above scope lists the least privileged scope needed. Follow the link to documentation to view higher privileged scopes.",
      "guid": "5b86f2dd18313ee7e205c92cdc40fb02",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://www.googleapis.com/calendar/v3/calendars/<<INPUT.calendar_id>>/events/<<INPUT.event_id>>",
        "content_type": "application_json",
        "method": "get",
        "headers": {
          "Authorization": "Bearer <<INPUT.google_calendar_credential>>"
        },
        "payload": "=LOCAL.final_payload",
        "local": {
          "optional_parameters": {
            "maxAttendees": "=INPUT.max_attendees",
            "timeZone": "=INPUT.time_zone"
          },
          "final_payload": "=REJECT(\n  LOCAL.optional_parameters,\n  LAMBDA(\n    item,\n    OR(\n      item = NULL,\n      IF(\n        OR(\n          TYPE(item) = \"TrueClass\",\n          TYPE(item) = \"FalseClass\",\n          TYPE(item) = \"Integer\"\n        ),\n        IS_EMPTY(TEXT(item)),\n        IS_EMPTY(item)\n      )\n    )\n  )\n)"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "bf55412a0577e8064b7b58d6eb2a5f366cfeb63b1de986f0d5341589774ea892",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Find Taker Info",
      "disabled": false,
      "description": null,
      "guid": "0614224276591140bbc04739559a921d",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "list",
        "filters": "[{\"definition_id\":\"56680\",\"operator\":\"EQUAL\",\"value\":\"<<parse_the_takers.response.user.id>>\"}]"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18331,
        "name": "Current CSEs",
        "editable": true,
        "record_fields": [
          {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::GroupAgent",
      "name": "Send Notice to CSM",
      "disabled": false,
      "description": "This group template combines two individual actions to allow you to easily input a user email to send a message to that user rather than identifying the user's ID.\n\nLink to documentation: https://api.slack.com/methods/users.lookupByEmail and https://api.slack.com/methods/chat.postMessage\n\nRequired scopes: users:read.email, chat.write ",
      "guid": "44a25b4b940dc4f385f72615d8b66d7e",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {},
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "6ee2211e28767ed9e0925c32b63af715dade0f1f3e8ed4c40836e97889c97e72",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "group": {
        "schema_version": 27,
        "standard_lib_version": 83,
        "action_runtime_version": 42,
        "name": "",
        "description": null,
        "guid": "2c8fa1e679739c1ce90b2cc122d12dd0",
        "slug": null,
        "agents": [
          {
            "type": "Agents::HTTPRequestAgent",
            "name": "Send message",
            "disabled": false,
            "description": "",
            "guid": "b0ce7d9b5432c7b24c845d74470e0b2b",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
            "options": {
              "url": "https://slack.com/api/chat.postMessage",
              "content_type": "json; charset=utf-8",
              "method": "post",
              "payload": {
                "channel": "<<search_user_by_email.body.user.id>>",
                "text": "=GROUP_INPUT.message"
              },
              "headers": {
                "Authorization": "Bearer <<GROUP_INPUT.slack_credential>>"
              }
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null,
            "schedule": null
          },
          {
            "type": "Agents::GroupInputAgent",
            "name": "Input",
            "disabled": false,
            "description": null,
            "guid": "70f7c241b7b6e027b612a9e43b817707",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
            "options": {
              "options": []
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null
          },
          {
            "type": "Agents::GroupOutputAgent",
            "name": "Output",
            "disabled": false,
            "description": null,
            "guid": "4047e01ae817f894d673e003241d958a",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
            "options": {
              "payload": "=send_message"
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null
          },
          {
            "type": "Agents::HTTPRequestAgent",
            "name": "Search user by email",
            "disabled": false,
            "description": "Retrieve a single user by looking them up by their registered email address.\n\nLink to documentation: https://api.slack.com/methods/users.lookupByEmail\n\nRequired scope: users:read.email",
            "guid": "44c1a8776cbcb6f02ff12bb7dde07f75",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
            "options": {
              "url": "https://slack.com/api/users.lookupByEmail",
              "content_type": "json; charset=utf-8",
              "method": "get",
              "payload": {
                "email": "<<GROUP_INPUT.user_email>>"
              },
              "headers": {
                "Authorization": "Bearer <<GROUP_INPUT.slack_credential>>"
              }
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null,
            "schedule": null
          }
        ],
        "diagram_notes": [],
        "links": [
          {
            "source": 0,
            "receiver": 2
          },
          {
            "source": 1,
            "receiver": 3
          },
          {
            "source": 3,
            "receiver": 0
          }
        ],
        "diagram_layout": "{\"4047e01ae817f894d673e003241d958a\":[930,1440],\"44c1a8776cbcb6f02ff12bb7dde07f75\":[930,1170],\"70f7c241b7b6e027b612a9e43b817707\":[930,1005],\"b0ce7d9b5432c7b24c845d74470e0b2b\":[930,1290]}",
        "story_library_metadata": {},
        "monitor_failures": false,
        "synchronous_webhooks_enabled": false,
        "integrations": []
      }
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Trigger Action",
      "disabled": false,
      "description": null,
      "guid": "761197b9984f3c4510f219058c66c5f4",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "rules": [
          {
            "path": "=IS_PRESENT(get_an_event.body.organizer.email)",
            "type": "formula"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Search Organizer/CSM by email",
      "disabled": true,
      "description": "Retrieve a single user by looking them up by their registered email address.\n\nLink to documentation: https://api.slack.com/methods/users.lookupByEmail\n\nRequired scope: users:read.email",
      "guid": "623349d4d4b05df245cfc1942f897aad",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://slack.com/api/users.lookupByEmail",
        "content_type": "json; charset=utf-8",
        "method": "get",
        "payload": {
          "email": "<<INPUT.email>>"
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "b0067e43344b6624c5920d6f3bd2e4cf1fceb3e986602775c1173e3f52d172d1",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Get Message Info",
      "disabled": false,
      "description": null,
      "guid": "c91199e370e632ea9e27d8467c91896b",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "list",
        "filters": "[{\"definition_id\":\"56686\",\"operator\":\"EQUAL\",\"value\":\"<<parse_the_takers.response.message.ts>>\"}]"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<pick_dates.headers.email>>",
          "include_in_update": false,
          "record_field": {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_a_message_designed_in_slack_s_block_kit_builder.body.message.ts>>",
          "include_in_update": false,
          "record_field": {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<[run_script_action.output.meeting_ids]>>",
          "include_in_update": false,
          "record_field": {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<get_submitter_timezone.records[0]['Location Area']>>",
          "include_in_update": false,
          "record_field": {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18332,
        "name": "CSE_PTO_Meeting",
        "editable": true,
        "record_fields": [
          {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          },
          {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Update CSE Block",
      "disabled": false,
      "description": null,
      "guid": "5a87ad611970d8e40fcedfa43ed58485",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "message_only",
        "loop": false,
        "payload": {
          "blocks": [
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "<<IF(IS_PRESENT(parse_the_takers.response.message.blocks[0].text.text),parse_the_takers.response.message.blocks[0].text.text,get_base_message[0].blocks[0].text.text)>>"
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "> :sparkles: This meeting was taken by <<parse_the_takers.response.user.name>>! :sparkles:\n>_\\<<<get_message_info.records[0].meeting_details_calendar_event_URL>>|Click here to add the event on Google Calendar>_"
              }
            },
            {
              "type": "actions",
              "elements": [
                {
                  "type": "button",
                  "text": {
                    "type": "plain_text",
                    "text": "Undo",
                    "emoji": true
                  },
                  "value": "undo",
                  "style": "danger",
                  "action_id": "action_2"
                },
                {
                  "type": "button",
                  "text": {
                    "type": "plain_text",
                    "text": "More Info",
                    "emoji": true
                  },
                  "value": "Details",
                  "action_id": "details_take_it"
                }
              ]
            }
          ]
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Explode Messages to Items",
      "disabled": false,
      "description": null,
      "guid": "f41058c2047fde37feb984d2d3d44a30",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "explode",
        "path": "=enrich_meeting_details.output",
        "to": "individual_item",
        "limit": "500"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Capture Record",
      "disabled": false,
      "description": null,
      "guid": "f264effd015b4a94e6457c3f7ebecaec",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "parent": "",
        "case_ids": "",
        "mode": "create"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<pick_dates.headers.email>>",
          "include_in_update": false,
          "record_field": {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_meeting_message_to_slack.body.ts>>",
          "include_in_update": false,
          "record_field": {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_meeting_message_to_slack.body.message.metadata.event_payload.meeting_id>>",
          "include_in_update": false,
          "record_field": {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<get_submitter_timezone.records[0]['Location Area']>>",
          "include_in_update": false,
          "record_field": {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(pick_dates.body.start_date, \"%m/%d\")>> - <<DATE(pick_dates.body.end_date, \"%m/%d\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_meeting_message_to_slack.body.message.metadata.event_payload.title>>",
          "include_in_update": false,
          "record_field": {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_meeting_message_to_slack.body.message.metadata.event_payload.action_id>>",
          "include_in_update": false,
          "record_field": {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "unclaimed",
          "include_in_update": false,
          "record_field": {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_meeting_message_to_slack.headers.date>>",
          "include_in_update": false,
          "record_field": {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_meeting_message_to_slack.headers.date>>",
          "include_in_update": false,
          "record_field": {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<0>>",
          "include_in_update": false,
          "record_field": {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          }
        },
        {
          "formula": "TEST",
          "include_in_update": false,
          "record_field": {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_meeting_message_to_slack.body.channel>>",
          "include_in_update": false,
          "record_field": {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<explode_messages_to_items.individual_item.URL_link>>",
          "include_in_update": false,
          "record_field": {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<generate_run_id.run_id>>",
          "include_in_update": false,
          "record_field": {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<explode_messages_to_items.individual_item.info_details>>",
          "include_in_update": false,
          "record_field": {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "https://<<your_slack_domain>>.slack.com/archives/<<send_meeting_message_to_slack.body.channel>>/p<<REMOVE(send_meeting_message_to_slack.body.ts,\".\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18332,
        "name": "CSE_PTO_Meeting",
        "editable": true,
        "record_fields": [
          {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          },
          {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Update Record",
      "disabled": false,
      "description": null,
      "guid": "0fc3e86d34597137272510c1a6a5200e",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "update",
        "parent": "",
        "add_case_ids": "",
        "remove_case_ids": "",
        "record_id": "=get_message_info.records[0].id"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "Claimed",
          "include_in_update": true,
          "record_field": {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<parse_the_takers.response.user.name>>",
          "include_in_update": true,
          "record_field": {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18332,
        "name": "CSE_PTO_Meeting",
        "editable": true,
        "record_fields": [
          {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          },
          {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Cancel Request",
      "disabled": false,
      "description": null,
      "guid": "2aec5128b58aab2408143ab46ff1a1eb",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "rules": [
          {
            "type": "field==value",
            "value": "delete",
            "path": "<<parse_the_takers.response.actions[0].selected_option.value>>"
          },
          {
            "type": "field==value",
            "value": "cancel request",
            "path": "<<parse_the_takers.response.actions[0].value>>"
          }
        ],
        "must_match": 1
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Delete a message",
      "disabled": false,
      "description": "Deletes a message from a channel or conversation.\n\nLink to documentation: https://api.slack.com/methods/chat.delete\n\nRequired scope: chat:write",
      "guid": "70c486b95307712f4584f410437c6222",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://slack.com/api/chat.delete",
        "content_type": "json; charset=utf-8",
        "method": "post",
        "payload": {
          "channel": "<<INPUT.channel_id>>",
          "ts": "\"<<INPUT.message_timestamp>>\""
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "0e1e8eb2b60e7ab8cdd1c7bd5cf1efa88ba547422b545f0fd87e4c2ab6b4b3d3",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Update message record",
      "disabled": false,
      "description": null,
      "guid": "7464f73183d1db470b8add7cc79011b9",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "update",
        "parent": "",
        "add_case_ids": "",
        "remove_case_ids": "",
        "record_id": "=get_message_info.records[0].id"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "Cancelled",
          "include_in_update": true,
          "record_field": {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<parse_the_takers.response.user.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18332,
        "name": "CSE_PTO_Meeting",
        "editable": true,
        "record_fields": [
          {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          },
          {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Undo Request",
      "disabled": false,
      "description": null,
      "guid": "654bc58b108e4d4f9c3a43f8e20c268e",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "rules": [
          {
            "type": "field==value",
            "value": "undo",
            "path": "<<parse_the_takers.response.actions[0].selected_option.value>>"
          },
          {
            "type": "field==value",
            "value": "undo",
            "path": "<<parse_the_takers.response.actions[0].value>>"
          }
        ],
        "must_match": 1
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "HTTP Request Action",
      "disabled": false,
      "description": null,
      "guid": "0ec9e84a5e963c85ef8d7adf1f1d96be",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "<<parse_the_takers.response.response_url>>",
        "content_type": "application_json",
        "method": "post",
        "payload": "=update_cse_block",
        "headers": {
          "Content-type": "application/json",
          "Authorization": "Bearer <<CREDENTIAL.your_slack_bot_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Update CSE Block",
      "disabled": false,
      "description": null,
      "guid": "83834e944b7374b354d000cec1592b23",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "message_only",
        "loop": false,
        "payload": {
          "blocks": [
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "<<IF(IS_PRESENT(parse_the_takers.response.message.blocks[0].text.text),parse_the_takers.response.message.blocks[0].text.text,get_base_message[0].blocks[0].text.text)>>"
              }
            },
            {
              "type": "actions",
              "elements": [
                {
                  "type": "button",
                  "text": {
                    "type": "plain_text",
                    "text": "I'll take it!",
                    "emoji": true
                  },
                  "value": "take it",
                  "style": "primary",
                  "action_id": "action_2"
                },
                {
                  "type": "button",
                  "text": {
                    "type": "plain_text",
                    "text": "More Info",
                    "emoji": true
                  },
                  "value": "Details",
                  "action_id": "details_undo"
                }
              ]
            }
          ]
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Generate Run ID",
      "disabled": false,
      "description": null,
      "guid": "ff7719708d9acc6b1649ff0923085bc0",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "mode": "message_only",
        "loop": false,
        "payload": {
          "run_id": "<<RANDOM_STRING()>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Find Records of Meetings in Same Run",
      "disabled": false,
      "description": null,
      "guid": "941bd45838d86df23850175ddc0a2e24",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "list",
        "record_result_mode": "",
        "filters": "[{\"definition_id\":\"56702\",\"operator\":\"EQUAL\",\"value\":\"<<update_message_record.result.run_id>>\"}]"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "\"cancelled\"",
          "include_in_update": true,
          "record_field": {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<parse_the_takers.response.user.name>>",
          "include_in_update": true,
          "record_field": {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18332,
        "name": "CSE_PTO_Meeting",
        "editable": true,
        "record_fields": [
          {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          },
          {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Gather Request Data",
      "disabled": false,
      "description": null,
      "guid": "810bb07a49b4023c7bce18aa9daf7858",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "mode": "message_only",
        "loop": false,
        "payload": {
          "num_records": "=SIZE(find_records_of_meetings_in_same_run.records)",
          "num_cancelled": "=SIZE(FILTER(find_records_of_meetings_in_same_run.records,LAMBDA(x,x.status = \"cancelled\")))",
          "num_needed": "=SIZE(find_records_of_meetings_in_same_run.records) - 1",
          "header_info": "=FILTER(find_records_of_meetings_in_same_run.records,LAMBDA(x,x.meeting_id = \"header\"))",
          "should_delete_header": "=SIZE(FILTER(find_records_of_meetings_in_same_run.records,LAMBDA(x,x.status = \"cancelled\"))) = SIZE(find_records_of_meetings_in_same_run.records) - 1"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Header Deletion Check",
      "disabled": false,
      "description": null,
      "guid": "0fc45632b63ba8e44a8654e925036338",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "rules": [
          {
            "path": "=gather_request_data.should_delete_header",
            "type": "formula"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Delete Message Header",
      "disabled": false,
      "description": "Deletes a message from a channel or conversation.\n\nLink to documentation: https://api.slack.com/methods/chat.delete\n\nRequired scope: chat:write",
      "guid": "88b7a53bec333591fbc30b3c4c3f6f69",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://slack.com/api/chat.delete",
        "content_type": "json; charset=utf-8",
        "method": "post",
        "payload": {
          "channel": "<<INPUT.channel_id>>",
          "ts": "\"<<INPUT.message_timestamp>>\""
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "0e1e8eb2b60e7ab8cdd1c7bd5cf1efa88ba547422b545f0fd87e4c2ab6b4b3d3",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Capture Record",
      "disabled": false,
      "description": null,
      "guid": "c325619dee3ffdbaf002ac16a07b95be",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "parent": "",
        "case_ids": "",
        "mode": "create"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<pick_dates.headers.email>>",
          "include_in_update": false,
          "record_field": {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_header_message_to_slack.body.ts>>",
          "include_in_update": false,
          "record_field": {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_header_message_to_slack.body.message.metadata.event_payload.meeting_id>>",
          "include_in_update": false,
          "record_field": {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<get_submitter_timezone.records[0]['Location Area']>>",
          "include_in_update": false,
          "record_field": {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(pick_dates.body.start_date, \"%m/%d\")>> - <<DATE(pick_dates.body.end_date, \"%m/%d\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_header_message_to_slack.body.message.metadata.event_payload.title>>",
          "include_in_update": false,
          "record_field": {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_header_message_to_slack.body.message.metadata.event_payload.action_id>>",
          "include_in_update": false,
          "record_field": {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "None",
          "include_in_update": false,
          "record_field": {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_header_message_to_slack.headers.date>>",
          "include_in_update": false,
          "record_field": {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_header_message_to_slack.headers.date>>",
          "include_in_update": false,
          "record_field": {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<0>>",
          "include_in_update": false,
          "record_field": {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          }
        },
        {
          "formula": "TEST",
          "include_in_update": false,
          "record_field": {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_header_message_to_slack.body.channel>>",
          "include_in_update": false,
          "record_field": {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<explode_messages_to_items.individual_item.URL_link>>",
          "include_in_update": false,
          "record_field": {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<generate_run_id.run_id>>",
          "include_in_update": false,
          "record_field": {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<explode_messages_to_items.individual_item.info_details>>",
          "include_in_update": false,
          "record_field": {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "https://<<your_slack_domain>>.slack.com/archives/<<send_header_message_to_slack.body.channel>>/p<<REMOVE(send_header_message_to_slack.body.ts,\".\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18332,
        "name": "CSE_PTO_Meeting",
        "editable": true,
        "record_fields": [
          {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          },
          {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Verify If Header",
      "disabled": false,
      "description": null,
      "guid": "ee8d2d183a2a99bf337c842343fb48d5",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "rules": [
          {
            "path": "<<explode_messages_to_items.individual_item.meeting_id>>",
            "type": "field!=value",
            "value": "header"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Get an event",
      "disabled": false,
      "description": "Returns an event based on its Google Calendar ID. \n\nLink to documentation: \nhttps://developers.google.com/calendar/api/v3/reference/events/get\n\nRequired scope(s): https://www.googleapis.com/auth/calendar.readonly\n\nPlease note: the above scope lists the least privileged scope needed. Follow the link to documentation to view higher privileged scopes.",
      "guid": "dcae965a6ed9f496b9536dce44f3371c",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://www.googleapis.com/calendar/v3/calendars/<<INPUT.calendar_id>>/events/<<INPUT.event_id>>",
        "content_type": "application_json",
        "method": "get",
        "headers": {
          "Authorization": "Bearer <<INPUT.google_calendar_credential>>"
        },
        "payload": "=LOCAL.final_payload",
        "local": {
          "optional_parameters": {
            "maxAttendees": "=INPUT.max_attendees",
            "timeZone": "=INPUT.time_zone"
          },
          "final_payload": "=REJECT(\n  LOCAL.optional_parameters,\n  LAMBDA(\n    item,\n    OR(\n      item = NULL,\n      IF(\n        OR(\n          TYPE(item) = \"TrueClass\",\n          TYPE(item) = \"FalseClass\",\n          TYPE(item) = \"Integer\"\n        ),\n        IS_EMPTY(TEXT(item)),\n        IS_EMPTY(item)\n      )\n    )\n  )\n)"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "bf55412a0577e8064b7b58d6eb2a5f366cfeb63b1de986f0d5341589774ea892",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Find Taker Info",
      "disabled": false,
      "description": null,
      "guid": "1a14f2e8fcce859a6898b3d558ebf886",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "list",
        "filters": "[{\"definition_id\":\"56680\",\"operator\":\"EQUAL\",\"value\":\"<<parse_the_takers.response.user.id>>\"}]"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18331,
        "name": "Current CSEs",
        "editable": true,
        "record_fields": [
          {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::GroupAgent",
      "name": "Send Notice to CSM",
      "disabled": false,
      "description": "This group template combines two individual actions to allow you to easily input a user email to send a message to that user rather than identifying the user's ID.\n\nLink to documentation: https://api.slack.com/methods/users.lookupByEmail and https://api.slack.com/methods/chat.postMessage\n\nRequired scopes: users:read.email, chat.write ",
      "guid": "46587c42aa2464ceaa34688e0fbf8f57",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {},
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "6ee2211e28767ed9e0925c32b63af715dade0f1f3e8ed4c40836e97889c97e72",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "group": {
        "schema_version": 27,
        "standard_lib_version": 83,
        "action_runtime_version": 42,
        "name": "",
        "description": null,
        "guid": "43279427c756f1b096822bc86e61cae9",
        "slug": null,
        "agents": [
          {
            "type": "Agents::HTTPRequestAgent",
            "name": "Send message",
            "disabled": false,
            "description": "",
            "guid": "97e8507f6be747add2c137b2a1dae6bb",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
            "options": {
              "url": "https://slack.com/api/chat.postMessage",
              "content_type": "json; charset=utf-8",
              "method": "post",
              "payload": {
                "channel": "<<search_user_by_email.body.user.id>>",
                "text": "=GROUP_INPUT.message"
              },
              "headers": {
                "Authorization": "Bearer <<GROUP_INPUT.slack_credential>>"
              }
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null,
            "schedule": null
          },
          {
            "type": "Agents::GroupInputAgent",
            "name": "Input",
            "disabled": false,
            "description": null,
            "guid": "b096b54bdefeb6a4f4d56871f8600fb9",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
            "options": {
              "options": []
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null
          },
          {
            "type": "Agents::GroupOutputAgent",
            "name": "Output",
            "disabled": false,
            "description": null,
            "guid": "a9371a8740f21544f63ae4605df685fd",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
            "options": {
              "payload": "=send_message"
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null
          },
          {
            "type": "Agents::HTTPRequestAgent",
            "name": "Search user by email",
            "disabled": false,
            "description": "Retrieve a single user by looking them up by their registered email address.\n\nLink to documentation: https://api.slack.com/methods/users.lookupByEmail\n\nRequired scope: users:read.email",
            "guid": "efeb3e6353b4edf2a9bb02d1ea8b7d71",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
            "options": {
              "url": "https://slack.com/api/users.lookupByEmail",
              "content_type": "json; charset=utf-8",
              "method": "get",
              "payload": {
                "email": "<<GROUP_INPUT.user_email>>"
              },
              "headers": {
                "Authorization": "Bearer <<GROUP_INPUT.slack_credential>>"
              }
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null,
            "schedule": null
          }
        ],
        "diagram_notes": [],
        "links": [
          {
            "source": 0,
            "receiver": 2
          },
          {
            "source": 1,
            "receiver": 3
          },
          {
            "source": 3,
            "receiver": 0
          }
        ],
        "diagram_layout": "{\"97e8507f6be747add2c137b2a1dae6bb\":[930,1290],\"a9371a8740f21544f63ae4605df685fd\":[930,1440],\"b096b54bdefeb6a4f4d56871f8600fb9\":[930,1005],\"efeb3e6353b4edf2a9bb02d1ea8b7d71\":[930,1170]}",
        "story_library_metadata": {},
        "monitor_failures": false,
        "synchronous_webhooks_enabled": false,
        "integrations": []
      }
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Trigger Action",
      "disabled": false,
      "description": null,
      "guid": "c0b0387fe365c25a520b7d921d2a581d",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "rules": [
          {
            "path": "=IS_PRESENT(get_an_event.body.organizer.email)",
            "type": "formula"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Search Organizer/CSM by email",
      "disabled": true,
      "description": "Retrieve a single user by looking them up by their registered email address.\n\nLink to documentation: https://api.slack.com/methods/users.lookupByEmail\n\nRequired scope: users:read.email",
      "guid": "c8fbace45f59b3fbe3d6d9916dd95b2a",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://slack.com/api/users.lookupByEmail",
        "content_type": "json; charset=utf-8",
        "method": "get",
        "payload": {
          "email": "<<INPUT.email>>"
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "b0067e43344b6624c5920d6f3bd2e4cf1fceb3e986602775c1173e3f52d172d1",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Update Record",
      "disabled": false,
      "description": null,
      "guid": "8eb659a05323bd188e51174cc2032348",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "update",
        "parent": "",
        "add_case_ids": "",
        "remove_case_ids": "",
        "record_id": "=get_message_info.records[0].id"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "Unclaimed",
          "include_in_update": true,
          "record_field": {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<NULL>>",
          "include_in_update": true,
          "record_field": {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<NULL>>",
          "include_in_update": true,
          "record_field": {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18332,
        "name": "CSE_PTO_Meeting",
        "editable": true,
        "record_fields": [
          {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          },
          {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::FormAgent",
      "name": "User Input Info Page",
      "disabled": false,
      "description": null,
      "guid": "33f366b4f1347735d898ff1051c960b0",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "fields": "",
        "mode": "story_run",
        "visibility": "tenant",
        "anonymize": false,
        "auto_submit": false,
        "page_logo": {
          "contents": "iVBORw0KGgoAAAANSUhEUgAAAFQAAAAYCAYAAABk8drWAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAARCSURBVHgB7VhLctpAEB1k7LVyA/kEgRMEn8BQ5e8qcALjE1icAPsEkJW/VeATwA1QTmDlBCE7l3/kPblbTIiMJcVOeaFXBRrN9Mz0vOnu6ZExBQoUKFCgwAdByX4ZDAbuw8PDwWw2a+LVk+rAcZxgZWWl02g0QpMSl5eXXRlnvLq62kLfqcmIi4uLZqlU+lwulztJ/aGvJ/p+39nZ6cu8R3j30c/f3t7umP8MRwtXV1df7+/vb6iMmZNJVJ6enppom5ydnbVNCpAIjENZF786Fn1kMgLE1PDocRz0HyTJQKe2zNOjMbBO3o1sZgS2Ybw29KqYd0ZEKMg8AGl980zAS3BhqV0Sv0Qmsho8/iCQi5T6XED/WtJmoj7W9/b2Vgk9gXUGWM+JtoF4H/VdFEdK/HvB4UIxuZ+2A2SPlykFayLhXkJ9z/wDsJlHaTZld3fXR4ho7O3tHWudRbyrxC+Ca+L4rxFuyXlJ7c7j4yOtKcuuuXd3d+0XJvMkZPwFWpm4cV64sLTBawuGB/UYus7Pz7vUB3NOYLGxV+EsuIHrT2ydITNCn5/sxyfaKdO0x02Qo8wNY7Yt52ChmeOKraAN2ZxlyBxLZb6xFCuvxWN4UE361PGYYn1egli0KSQJxIy42VIfso959rCehplFOYYUkY0MCJvn68C5CDUJLi2ho7msExVa3Pk0QL9veJxIuZ3W0pkZIMNYR3GodSBjA3VVlsUAPK1HprCOuqoQpmHGRV3FzNfcQvZQpSx06YjcFx3fMW8E7mBK0W6egwEk+ObZKkjqIO0hR1Ih/0vfYeGhpmAwgLpUX4OkMQv7+/shCNV0i+GtBrlYX5Kn2QLjNTeCMVvby6KkZ7IhsF/E6jyTDhqDfZMBJAHzUHHGP1cOuR8mJ05PTz0zPzs2MfZM20BgLAfCXGzmEAYTWbN4YRPy3JQxNusauo1V3hF3yopg4T1TbISSB3nSKLhZgL6HLDN8oLxp3ga8vPSTfnD3MTcTzw1ypeHASI6NX88+5Jy1tTWmF1luMRw8voHIKeeZbHBTHGCJgGseW4dU7pySrm3m6w62trZa9o/kQcdrkTNwaw9c8fZVhcV+oqtb5FY0DDgSTw7TKgKT7+gkhH0jyQK6Tt4kG+7eMtmMIAasLj6ELULqtsfw8oJ1jdA+YGjgLYvvPCcoR84Yc63+UWiIxucf78HiSsuUZFvLTpgF73rzSAI3FMS0MnQJtUCSmD/KdwvdGFfyygnb5NZIBGI8ShzTpwnzUcpaWU2oh1p8ytOVmDIsxIlImOkB0w/9AGFDFhaabJhCmcNlH0zgYoGxXHKxHW451LSF86vXQPdQ6sYqy7BmhYlofs7NPpImaZumR5y3jzVvsFLI0nW6ko9WRG6oaVg0v/nA0JCwjHhx1aktw3jGA+yF8dykr2ZisRVsZLg4XpIcSGWOG+b5ilagQIECBZLxG5sJ41WbSDouAAAAAElFTkSuQmCC\n",
          "display_logo": false,
          "name": "nites.jpeg",
          "type": "image/jpeg"
        },
        "page_width": "large",
        "pages_action_color": "#25cc73",
        "pages_appearance_mode": "light",
        "pages_background_color": "#efae86",
        "auto_close_tab_on_submit": true,
        "url_identifier": "07ff016e7b3de80c77c96184673964d6",
        "loading_message": "Please wait…"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Trigger Action",
      "disabled": false,
      "description": null,
      "guid": "45b135b6a07e5fec3703445a118b09df",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "rules": [
          {
            "type": "field==value",
            "value": "Submit",
            "path": "<<user_input_info_page.body.button>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::FormAgent",
      "name": "Confirmation Page",
      "disabled": false,
      "description": null,
      "guid": "65435e178f383e6ffd4b796a57d5a9f5",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "fields": "",
        "mode": "success_page",
        "submissionMessage": "Thank you for your submission! \n\nA Slack message will be sent to #cse_pto_takeover momentarily",
        "visibility": "tenant",
        "anonymize": false,
        "auto_submit": true,
        "page_logo": {
          "contents": "iVBORw0KGgoAAAANSUhEUgAAAFQAAAAYCAYAAABk8drWAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAARCSURBVHgB7VhLctpAEB1k7LVyA/kEgRMEn8BQ5e8qcALjE1icAPsEkJW/VeATwA1QTmDlBCE7l3/kPblbTIiMJcVOeaFXBRrN9Mz0vOnu6ZExBQoUKFCgwAdByX4ZDAbuw8PDwWw2a+LVk+rAcZxgZWWl02g0QpMSl5eXXRlnvLq62kLfqcmIi4uLZqlU+lwulztJ/aGvJ/p+39nZ6cu8R3j30c/f3t7umP8MRwtXV1df7+/vb6iMmZNJVJ6enppom5ydnbVNCpAIjENZF786Fn1kMgLE1PDocRz0HyTJQKe2zNOjMbBO3o1sZgS2Ybw29KqYd0ZEKMg8AGl980zAS3BhqV0Sv0Qmsho8/iCQi5T6XED/WtJmoj7W9/b2Vgk9gXUGWM+JtoF4H/VdFEdK/HvB4UIxuZ+2A2SPlykFayLhXkJ9z/wDsJlHaTZld3fXR4ho7O3tHWudRbyrxC+Ca+L4rxFuyXlJ7c7j4yOtKcuuuXd3d+0XJvMkZPwFWpm4cV64sLTBawuGB/UYus7Pz7vUB3NOYLGxV+EsuIHrT2ydITNCn5/sxyfaKdO0x02Qo8wNY7Yt52ChmeOKraAN2ZxlyBxLZb6xFCuvxWN4UE361PGYYn1egli0KSQJxIy42VIfso959rCehplFOYYUkY0MCJvn68C5CDUJLi2ho7msExVa3Pk0QL9veJxIuZ3W0pkZIMNYR3GodSBjA3VVlsUAPK1HprCOuqoQpmHGRV3FzNfcQvZQpSx06YjcFx3fMW8E7mBK0W6egwEk+ObZKkjqIO0hR1Ih/0vfYeGhpmAwgLpUX4OkMQv7+/shCNV0i+GtBrlYX5Kn2QLjNTeCMVvby6KkZ7IhsF/E6jyTDhqDfZMBJAHzUHHGP1cOuR8mJ05PTz0zPzs2MfZM20BgLAfCXGzmEAYTWbN4YRPy3JQxNusauo1V3hF3yopg4T1TbISSB3nSKLhZgL6HLDN8oLxp3ga8vPSTfnD3MTcTzw1ypeHASI6NX88+5Jy1tTWmF1luMRw8voHIKeeZbHBTHGCJgGseW4dU7pySrm3m6w62trZa9o/kQcdrkTNwaw9c8fZVhcV+oqtb5FY0DDgSTw7TKgKT7+gkhH0jyQK6Tt4kG+7eMtmMIAasLj6ELULqtsfw8oJ1jdA+YGjgLYvvPCcoR84Yc63+UWiIxucf78HiSsuUZFvLTpgF73rzSAI3FMS0MnQJtUCSmD/KdwvdGFfyygnb5NZIBGI8ShzTpwnzUcpaWU2oh1p8ytOVmDIsxIlImOkB0w/9AGFDFhaabJhCmcNlH0zgYoGxXHKxHW451LSF86vXQPdQ6sYqy7BmhYlofs7NPpImaZumR5y3jzVvsFLI0nW6ko9WRG6oaVg0v/nA0JCwjHhx1aktw3jGA+yF8dykr2ZisRVsZLg4XpIcSGWOG+b5ilagQIECBZLxG5sJ41WbSDouAAAAAElFTkSuQmCC\n",
          "display_logo": false,
          "name": "nites.jpeg",
          "type": "image/jpeg"
        },
        "page_width": "large",
        "pages_action_color": "#25cc73",
        "pages_appearance_mode": "light",
        "pages_background_color": "#efae86",
        "auto_close_tab_on_submit": true,
        "url_identifier": "cb3586e7bace1ae68ce7df7aa88057bc",
        "auto_submit_time": "five_seconds",
        "auto_close_tab_on_submit_delay": 10000
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Details Request",
      "disabled": false,
      "description": null,
      "guid": "81eb21ff5269c178ba7312cdfced0983",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "rules": [
          {
            "type": "field==value",
            "value": "Details",
            "path": "<<parse_the_takers.response.actions[0].value>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Enrich Meeting Details",
      "disabled": false,
      "description": null,
      "guid": "9752d266a0d63bf12e45db088f8a1798",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "mode": "automatic",
        "input": "=[IF(user_input_info_page.body.container = NULL, \"\",user_input_info_page.body.container), display_pto_events.output.messages]",
        "guidance": "Purpose:\nThis transform matches PTO event information between two data structures, combining them based on meeting names and standardizing field names for easier access.\n\nInput Data Structure:\n\nThe first array contains objects with:\n\nFields ending with \"_info\" (like \"pto_event_tines_guardant_health_info\") containing meeting details\n\"vitally_note_url\" fields with relevant URLs\n\"current_value\" fields with meeting names (format: \"PTO Event: [meeting name]\")\nThe second array contains meeting objects with:\n\n\"text\" fields containing the same meeting names (format: \"PTO Event: [meeting name]\")\nTransform Process:\n\nFor each meeting object in the second array:\nFind the matching info object in the first array where \"current_value\" equals the meeting's \"text\"\nFind any key in the info object that ends with \"_info\" and extract its value\nExtract the \"vitally_note_url\" value\nAdd these as standardized fields to the meeting object\nImplementation Code:\n\nfrom typing import List, Dict\n\ndef main(input: List[List[Dict]]):\n    meetings = input[1]\n    info_objects = input[0]\n\n    for meeting in meetings:\n        meeting_name = meeting.get(\"text\")\n        for info_object in info_objects:\n            if info_object.get(\"current_value\") == meeting_name:\n                # Find the key that ends with \"_info\"\n                info_key = None\n                for key in info_object:\n                    if key.endswith(\"_info\"):\n                        info_key = key\n                        break\n                \n                # Get the value from the found key\n                if info_key:\n                    meeting[\"info_details\"] = info_object.get(info_key)\n                meeting[\"vitally_note_url\"] = info_object.get(\"vitally_note_url\")\n                break\n\n    return meetings\nExpected Output:\nEach meeting object will be enhanced with:\n\nAn \"info_details\" field containing the meeting information (extracted from any field ending with \"_info\")\nA \"vitally_note_url\" field with the relevant URL\nAll original meeting data preserved\nKey Implementation Notes:\n\nThe code dynamically finds the correct info field by looking for any key ending with \"_info\"\nThis approach handles varying field names without needing to construct the exact key format\nThe matching is done by comparing the full meeting name strings\nIf no matching info is found, the fields will remain null\nBenefits:\n\nConsolidates related information from different sources\nStandardizes dynamic field names for consistent access\nHandles varying key formats robustly\nCreates a unified view of PTO events with all relevant details",
        "language": "python",
        "script": "from typing import List, Dict\n\ndef main(input: List[List[Dict]]):\n    meetings = input[1]\n    info_objects = input[0]\n\n    for meeting in meetings:\n        meeting_name = meeting.get(\"text\")\n        for info_object in info_objects:\n            if info_object.get(\"current_value\") == meeting_name:\n                info_key = next((key for key in info_object if key.endswith(\"_info\")), None)\n                if info_key:\n                    meeting[\"info_details\"] = info_object.get(info_key)\n                meeting[\"vitally_note_url\"] = info_object.get(\"vitally_note_url\")\n                break\n\n    return meetings"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Open Slack View for Unclaimed",
      "disabled": false,
      "description": "Opens a modal with a user by exchanging a trigger_id received from another interaction. See the modals documentation (https://api.slack.com/block-kit/surfaces/modals) to learn how to obtain triggers from interactive components.\n\nLink to documentation:\nhttps://api.slack.com/methods/views.open\n\nRequired scopes: \nBot tokens - No scope required\nUser tokens - No scope required\nLegacy bot tokens - bot",
      "guid": "95c620bbecb8f2891910d8092e856831",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "url": "https://slack.com/api/views.open",
        "content_type": "json; charset=utf-8",
        "method": "post",
        "payload": {
          "trigger_id": "<<INPUT.trigger_id>>",
          "view": "=DEFAULT(INPUT.view_object.view, INPUT.view_object)"
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "5cfa7c281205bf7cce53ec3a1b2c8479add371d714c869393a06c879e4dbd191",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Extract Meeting Times",
      "disabled": false,
      "description": null,
      "guid": "cce2158b7ceb88376716a454504f7aa0",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "mode": "automatic",
        "input": "=parse_the_takers.response.message.text",
        "guidance": "Find the first two Slack-formatted date blocks in the input. They look like this:\n\n<!date^UNIX_TIMESTAMP^{...}|YYYY-MM-DD HH:MM:SS AM/PM UTC>\n\nIgnore what’s between the `^` and `|` — just extract the UNIX timestamp and the full datetime shown after the `|`.\n\nReturn them in this format:\n\n<!date^UNIX_TIMESTAMP_1^YYYY-MM-DD HH:MM:SS AM/PM UTC|YYYY-MM-DD HH:MM:SS AM/PM UTC> - <!date^UNIX_TIMESTAMP_2^YYYY-MM-DD HH:MM:SS AM/PM UTC|YYYY-MM-DD HH:MM:SS AM/PM UTC>\n\nOnly return this result, and nothing else.\n\nExample:\n\nInput:\n\"<!date^1748370600^{date_short_pretty} {time}|2025-05-27 06:30:00 PM UTC> - <!date^1748372400^{time}|2025-05-27 07:00:00 PM UTC>\"\n\nOutput:\n<!date^1748370600^2025-05-27 06:30:00 PM UTC|2025-05-27 06:30:00 PM UTC> - <!date^1748372400^2025-05-27 07:00:00 PM UTC|2025-05-27 07:00:00 PM UTC>",
        "language": "python",
        "script": "import re\n\ndef main(input):\n    date_patterns = r'<!date\\^(\\d+)\\^(.*?)\\|(\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2} [AP]M UTC)>'\n    matches = re.findall(date_patterns, input)\n    \n    if len(matches) >= 2:\n        timestamp1, datetime1 = matches[0][0], matches[0][2]\n        timestamp2, datetime2 = matches[1][0], matches[1][2]\n        return f'<!date^{timestamp1}^{datetime1}|{datetime1}> - <!date^{timestamp2}^{datetime2}|{datetime2}>'\n    else:\n        return ''"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Trigger Action",
      "disabled": false,
      "description": null,
      "guid": "684e25a10defaf397cd063c93aa76e12",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "rules": [
          {
            "type": "field==value",
            "value": "overflow",
            "path": "<<parse_the_takers.response.actions[0].type>>"
          },
          {
            "type": "field==value",
            "value": "view_submission",
            "path": "<<parse_the_takers.response.type>>"
          }
        ],
        "must_match": 1
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Open Slack View for Claimed",
      "disabled": false,
      "description": "Opens a modal with a user by exchanging a trigger_id received from another interaction. See the modals documentation (https://api.slack.com/block-kit/surfaces/modals) to learn how to obtain triggers from interactive components.\n\nLink to documentation:\nhttps://api.slack.com/methods/views.open\n\nRequired scopes: \nBot tokens - No scope required\nUser tokens - No scope required\nLegacy bot tokens - bot",
      "guid": "0354563540b6163aaf859d5580c47b07",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "url": "https://slack.com/api/views.open",
        "content_type": "json; charset=utf-8",
        "method": "post",
        "payload": {
          "trigger_id": "<<INPUT.trigger_id>>",
          "view": "=DEFAULT(INPUT.view_object.view, INPUT.view_object)"
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "5cfa7c281205bf7cce53ec3a1b2c8479add371d714c869393a06c879e4dbd191",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Meeting status is claimed",
      "disabled": false,
      "description": null,
      "guid": "c92a9cf5dae468a82e9dfca19a2586cb",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "rules": [
          {
            "type": "field==value",
            "value": "claimed",
            "path": "<<get_message_info.records[0].status>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Modal Response",
      "disabled": false,
      "description": null,
      "guid": "2e749c74061b901e9fe0eecaafbc728f",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "mode": "message_only",
        "loop": false,
        "payload": "=parse_the_takers.response.view"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Get Message Info",
      "disabled": false,
      "description": null,
      "guid": "b812e6fab2cb25db74094fd4d00a8512",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "list",
        "filters": "[{\"definition_id\":\"56687\",\"operator\":\"EQUAL\",\"value\":\"<<parse_the_takers.response.view.callback_id>>\"}]"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<pick_dates.headers.email>>",
          "include_in_update": false,
          "record_field": {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<send_a_message_designed_in_slack_s_block_kit_builder.body.message.ts>>",
          "include_in_update": false,
          "record_field": {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<[run_script_action.output.meeting_ids]>>",
          "include_in_update": false,
          "record_field": {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<get_submitter_timezone.records[0]['Location Area']>>",
          "include_in_update": false,
          "record_field": {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18332,
        "name": "CSE_PTO_Meeting",
        "editable": true,
        "record_fields": [
          {
            "id": 56683,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56684,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56685,
            "name": "submitter_email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56686,
            "name": "slack_message_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56687,
            "name": "meeting_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56688,
            "name": "submitter_location",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56689,
            "name": "submitter_time_off",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56690,
            "name": "meeting_details_title",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56691,
            "name": "action_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56692,
            "name": "status",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56693,
            "name": "posted_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56694,
            "name": "claimed_by",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56695,
            "name": "last_reminder_at",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56696,
            "name": "reminders_count",
            "result_type": "NUMBER",
            "fixed_values": []
          },
          {
            "id": 56697,
            "name": "record_type",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56698,
            "name": "slack_channel_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56699,
            "name": "meeting_details_calendar_event_URL",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56700,
            "name": "claimed_at_ts",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56701,
            "name": "meeting_details_date",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56702,
            "name": "run_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56704,
            "name": "meeting_details_description",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56705,
            "name": "message_url",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Get conversation history",
      "disabled": false,
      "description": "Use a custom Slack app; this template is not supported by Tines bot for Slack. Fetches a conversation's history of messages and events.\n\nLink to documentation: https://api.slack.com/methods/conversations.history\n\nRequired scope(s): channels:history, groups:history, im:history, mpim:history\nPlease note: this requires a user token, which is not supported by Tines's bot for Slack. If you have your own custom bot, ensure the '*:history' scope has been added and the token is being called as the credential in this action",
      "guid": "b5794d72674bc7bf4814cb0abd0c37e1",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "url": "https://slack.com/api/conversations.history",
        "content_type": "json; charset=utf-8",
        "method": "get",
        "payload": "=LOCAL.final_payload",
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        },
        "local": {
          "all_options": {
            "limit": "=DEFAULT(INPUT.limit, 100)",
            "cursor": "=INPUT.cursor",
            "channel": "=INPUT.channel",
            "include_all_metadata": "=INPUT.include_all_metadata",
            "inclusive": "=INPUT.inclusive",
            "latest": "=INPUT.latest",
            "oldest": "=INPUT.oldest"
          },
          "final_payload": "=REJECT(\n  LOCAL.all_options,\n  LAMBDA(\n    item,\n    OR(\n      item = NULL,\n      IF(\n        OR(\n          TYPE(item) = \"TrueClass\",\n          TYPE(item) = \"FalseClass\",\n          TYPE(item) = \"Integer\"\n        ),\n        IS_EMPTY(TEXT(item)),\n        IS_EMPTY(item)\n      )\n    )\n  )\n)"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "b1e319259f084a6e11dee9e38fdb2bcc7e67de0a30b5ed05103955bdbc487fc9",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Get Base Message",
      "disabled": false,
      "description": null,
      "guid": "1d21106434d26cafb045882dfcd8ef5a",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "mode": "message_only",
        "loop": false,
        "payload": "=FILTER(get_conversation_history.body.messages,LAMBDA(x,x.ts=get_conversation_history.body.messages[0].ts))"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Trigger Action",
      "disabled": false,
      "description": null,
      "guid": "1c94b9e92199572c2e746b8aff465aec",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "rules": [
          {
            "type": "field==value",
            "value": "undo",
            "path": "<<parse_the_takers.response.actions[0].selected_option.value>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Update a message",
      "disabled": false,
      "description": "Updates a message sent in a channel. Only messages sent by the authenticated user are able to be updated using this method.\n\nLink to documentation: https://api.slack.com/methods/chat.update\n\nRequired scope: chat:write",
      "guid": "a5e6e3445dc3f2395ce0b7e852f8a8b3",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "url": "https://slack.com/api/chat.update",
        "content_type": "json; charset=utf-8",
        "method": "post",
        "payload": "=LOCAL.final_payload",
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        },
        "local": {
          "all_options": {
            "channel": "<<INPUT.channel_id>>",
            "text": "<<INPUT.message>>",
            "link_names": "=INPUT.link_names",
            "ts": "\"<<INPUT.message_timestamp>>\"",
            "metadata": "=INPUT.metadata",
            "reply_broadcast": "=INPUT.reply_broadcast",
            "parse": "=FORCE_ARRAY(INPUT.parse)[0]",
            "blocks": "=DEFAULT(INPUT.blocks_message.blocks, INPUT.blocks_message)",
            "file_ids": "<<INPUT.file_ids>>"
          },
          "final_payload": "=REJECT(\n  LOCAL.all_options,\n  LAMBDA(\n    item,\n    OR(\n      item = NULL,\n      IF(\n        OR(\n          TYPE(item) = \"TrueClass\",\n          TYPE(item) = \"FalseClass\",\n          TYPE(item) = \"Integer\"\n        ),\n        IS_EMPTY(TEXT(item)),\n        IS_EMPTY(item)\n      )\n    )\n  )\n)"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "aa053ca585b0b4bf9d726d87d306c985042e2627f556c719ef149b682832b954",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Update Slack Modal - Cancel",
      "disabled": false,
      "description": "Opens a modal with a user by exchanging a trigger_id received from another interaction. See the modals documentation (https://api.slack.com/block-kit/surfaces/modals) to learn how to obtain triggers from interactive components.\n\nLink to documentation:\nhttps://api.slack.com/methods/views.open\n\nRequired scopes: \nBot tokens - No scope required\nUser tokens - No scope required\nLegacy bot tokens - bot",
      "guid": "33d9242f4aba10458b650e91df716682",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "url": "https://slack.com/api/views.update",
        "content_type": "json; charset=utf-8",
        "method": "post",
        "payload": {
          "trigger_id": "<<INPUT.trigger_id>>",
          "view_id": "<<parse_the_takers.response.view.id>>",
          "view": {
            "type": "modal",
            "title": {
              "type": "plain_text",
              "text": "PTO Takeover"
            },
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "The meeting request for\n<<IF(IS_PRESENT(get_message_info.records[0].meeting_details_title),get_message_info.records[0].meeting_details_title,get_base_message.title)>> has been deleted!"
                }
              }
            ],
            "close": {
              "type": "plain_text",
              "text": "Close"
            },
            "private_metadata": "taking_it",
            "callback_id": "<<get_message_info.records[0].meeting_id>>"
          }
        },
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "5cfa7c281205bf7cce53ec3a1b2c8479add371d714c869393a06c879e4dbd191",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::TriggerAgent",
      "name": "Trigger Action",
      "disabled": false,
      "description": null,
      "guid": "d9fa55256bbe991d95151255f1e6ba31",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "rules": [
          {
            "type": "field==value",
            "value": "view_submission",
            "path": "<<parse_the_takers.response.type>>"
          }
        ]
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Update a message",
      "disabled": false,
      "description": "Updates a message sent in a channel. Only messages sent by the authenticated user are able to be updated using this method.\n\nLink to documentation: https://api.slack.com/methods/chat.update\n\nRequired scope: chat:write",
      "guid": "c3f2bdba67d724cc4fcc0aed3f981189",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "url": "https://slack.com/api/chat.update",
        "content_type": "json; charset=utf-8",
        "method": "post",
        "payload": "=LOCAL.final_payload",
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        },
        "local": {
          "all_options": {
            "channel": "<<INPUT.channel_id>>",
            "text": "<<INPUT.message>>",
            "link_names": "=INPUT.link_names",
            "ts": "\"<<INPUT.message_timestamp>>\"",
            "metadata": "=INPUT.metadata",
            "reply_broadcast": "=INPUT.reply_broadcast",
            "parse": "=FORCE_ARRAY(INPUT.parse)[0]",
            "blocks": "=DEFAULT(INPUT.blocks_message.blocks, INPUT.blocks_message)",
            "file_ids": "<<INPUT.file_ids>>"
          },
          "final_payload": "=REJECT(\n  LOCAL.all_options,\n  LAMBDA(\n    item,\n    OR(\n      item = NULL,\n      IF(\n        OR(\n          TYPE(item) = \"TrueClass\",\n          TYPE(item) = \"FalseClass\",\n          TYPE(item) = \"Integer\"\n        ),\n        IS_EMPTY(TEXT(item)),\n        IS_EMPTY(item)\n      )\n    )\n  )\n)"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "aa053ca585b0b4bf9d726d87d306c985042e2627f556c719ef149b682832b954",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::RecordAgent",
      "name": "Find Submitter Info",
      "disabled": false,
      "description": null,
      "guid": "889e8becd39727cc433f4bc2e392b3ac",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "mode": "list",
        "filters": "[{\"definition_id\":\"56679\",\"operator\":\"EQUAL\",\"value\":\"<<get_message_info.records[0].submitter_email>>\"}]"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "record_writers": [
        {
          "formula": "<<META.story.name>>",
          "include_in_update": false,
          "record_field": {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<DATE(\"now\", \"%Y-%m-%d %H:%M:%S\")>>",
          "include_in_update": false,
          "record_field": {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          }
        },
        {
          "formula": "<<>>",
          "include_in_update": false,
          "record_field": {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        }
      ],
      "record_type": {
        "id": 18331,
        "name": "Current CSEs",
        "editable": true,
        "record_fields": [
          {
            "id": 56676,
            "name": "Story name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56677,
            "name": "Timestamp",
            "result_type": "TIMESTAMP",
            "fixed_values": []
          },
          {
            "id": 56678,
            "name": "real_name",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56679,
            "name": "email",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56680,
            "name": "user_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56681,
            "name": "dm_id",
            "result_type": "TEXT",
            "fixed_values": []
          },
          {
            "id": 56682,
            "name": "Location Area",
            "result_type": "TEXT",
            "fixed_values": []
          }
        ]
      }
    },
    {
      "type": "Agents::GroupAgent",
      "name": "Send Direct to CSE",
      "disabled": false,
      "description": "This group template combines two individual actions to allow you to easily input a user email to send a message to that user rather than identifying the user's ID.\n\nLink to documentation: https://api.slack.com/methods/users.lookupByEmail and https://api.slack.com/methods/chat.postMessage\n\nRequired scopes: users:read.email, chat.write ",
      "guid": "da3d67112ae302e5ec5dc084040da642",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {},
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "6ee2211e28767ed9e0925c32b63af715dade0f1f3e8ed4c40836e97889c97e72",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null,
      "group": {
        "schema_version": 27,
        "standard_lib_version": 83,
        "action_runtime_version": 42,
        "name": "",
        "description": null,
        "guid": "1c5fb649736fb9273af569282e7c9305",
        "slug": null,
        "agents": [
          {
            "type": "Agents::HTTPRequestAgent",
            "name": "Send message",
            "disabled": false,
            "description": "",
            "guid": "d9614d2ffb7a2479f22485f842b9ec51",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
            "options": {
              "url": "https://slack.com/api/chat.postMessage",
              "content_type": "json; charset=utf-8",
              "method": "post",
              "payload": {
                "channel": "<<search_user_by_email.body.user.id>>",
                "text": "=GROUP_INPUT.message"
              },
              "headers": {
                "Authorization": "Bearer <<GROUP_INPUT.slack_credential>>"
              }
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null,
            "schedule": null
          },
          {
            "type": "Agents::GroupInputAgent",
            "name": "Input",
            "disabled": false,
            "description": null,
            "guid": "a33bd37eda2a8722a5c53f57e6e0c6c8",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
            "options": {
              "options": []
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null
          },
          {
            "type": "Agents::GroupOutputAgent",
            "name": "Output",
            "disabled": false,
            "description": null,
            "guid": "fea8ec3a000363cdf31c8eebe04f0bc8",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
            "options": {
              "payload": "=send_message"
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null
          },
          {
            "type": "Agents::HTTPRequestAgent",
            "name": "Search user by email",
            "disabled": false,
            "description": "Retrieve a single user by looking them up by their registered email address.\n\nLink to documentation: https://api.slack.com/methods/users.lookupByEmail\n\nRequired scope: users:read.email",
            "guid": "3f25075ec39bba94b37580693f56df79",
            "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
            "options": {
              "url": "https://slack.com/api/users.lookupByEmail",
              "content_type": "json; charset=utf-8",
              "method": "get",
              "payload": {
                "email": "<<GROUP_INPUT.user_email>>"
              },
              "headers": {
                "Authorization": "Bearer <<GROUP_INPUT.slack_credential>>"
              }
            },
            "reporting": {
              "time_saved_value": 0,
              "time_saved_unit": "minutes"
            },
            "monitoring": {
              "monitor_all_events": false,
              "monitor_failures": false,
              "monitor_no_events_emitted": null
            },
            "template": {
              "created_from_template_guid": null,
              "created_from_template_version": null,
              "template_tags": []
            },
            "width": null,
            "schedule": null
          }
        ],
        "diagram_notes": [],
        "links": [
          {
            "source": 0,
            "receiver": 2
          },
          {
            "source": 1,
            "receiver": 3
          },
          {
            "source": 3,
            "receiver": 0
          }
        ],
        "diagram_layout": "{\"3f25075ec39bba94b37580693f56df79\":[930,1170],\"a33bd37eda2a8722a5c53f57e6e0c6c8\":[930,1005],\"d9614d2ffb7a2479f22485f842b9ec51\":[930,1290],\"fea8ec3a000363cdf31c8eebe04f0bc8\":[930,1440]}",
        "story_library_metadata": {},
        "monitor_failures": false,
        "synchronous_webhooks_enabled": false,
        "integrations": []
      }
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Send header message to Slack",
      "disabled": false,
      "description": "Sends a message to a public channel, private channel, or direct message/IM channel that has rich, interactive elements that you can design in Slack's Block Kit Builder. \n\nLink to documentation: https://api.slack.com/methods/chat.postMessage\nLink to Block Kit Builder Overview: https://api.slack.com/block-kit\nLink to Block Kit Builder: https://api.slack.com/tools/block-kit-builder \n\nRequired scope: chat:write",
      "guid": "997770600f676e2bef54b86c6c0cdb01",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://slack.com/api/chat.postMessage",
        "content_type": "json; charset=utf-8",
        "method": "post",
        "payload": "=LOCAL.final_payload",
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        },
        "local": {
          "all_options": {
            "channel": "<<INPUT.channel_user_id>>",
            "blocks": "=DEFAULT(INPUT.message.blocks, INPUT.message)",
            "icon_emoji": "<<INPUT.icon_emoji>>",
            "icon_url": "<<INPUT.icon_url>>",
            "link_names": "=INPUT.link_names",
            "thread_ts": "\"<<INPUT.thread_timestamp>>\"",
            "username": "<<INPUT.username>>",
            "metadata": "=INPUT.metadata",
            "mrkdwn": "=INPUT.markdown",
            "reply_broadcast": "=INPUT.send_reply_to_channel",
            "unfurl_links": "=INPUT.unfurl_links",
            "unfurl_media": "=INPUT.unfurl_media",
            "parse": "<<INPUT.parse>>"
          },
          "final_payload": "=REJECT(\n  LOCAL.all_options,\n  LAMBDA(\n    item,\n    OR(\n      item = NULL,\n      IF(\n        OR(\n          TYPE(item) = \"TrueClass\",\n          TYPE(item) = \"FalseClass\",\n          TYPE(item) = \"Integer\"\n        ),\n        IS_EMPTY(TEXT(item)),\n        IS_EMPTY(item)\n      )\n    )\n  )\n)"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "52e0649e3d147759de03210df9686e0b4a86587edd0fde896e11fae52acf1f7e",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::HTTPRequestAgent",
      "name": "Send meeting message to Slack",
      "disabled": false,
      "description": "Sends a message to a public channel, private channel, or direct message/IM channel that has rich, interactive elements that you can design in Slack's Block Kit Builder. \n\nLink to documentation: https://api.slack.com/methods/chat.postMessage\nLink to Block Kit Builder Overview: https://api.slack.com/block-kit\nLink to Block Kit Builder: https://api.slack.com/tools/block-kit-builder \n\nRequired scope: chat:write",
      "guid": "00dcccc91b48f68ae34d1028c1ec59a6",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
      "options": {
        "url": "https://slack.com/api/chat.postMessage",
        "content_type": "json; charset=utf-8",
        "method": "post",
        "payload": "=LOCAL.final_payload",
        "headers": {
          "Authorization": "Bearer <<INPUT.slack_credential>>"
        },
        "local": {
          "all_options": {
            "channel": "<<INPUT.channel_user_id>>",
            "blocks": "=DEFAULT(INPUT.message.blocks, INPUT.message)",
            "icon_emoji": "<<INPUT.icon_emoji>>",
            "icon_url": "<<INPUT.icon_url>>",
            "link_names": "=INPUT.link_names",
            "thread_ts": "\"<<INPUT.thread_timestamp>>\"",
            "username": "<<INPUT.username>>",
            "metadata": "=INPUT.metadata",
            "mrkdwn": "=INPUT.markdown",
            "reply_broadcast": "=INPUT.send_reply_to_channel",
            "unfurl_links": "=INPUT.unfurl_links",
            "unfurl_media": "=INPUT.unfurl_media",
            "parse": "<<INPUT.parse>>"
          },
          "final_payload": "=REJECT(\n  LOCAL.all_options,\n  LAMBDA(\n    item,\n    OR(\n      item = NULL,\n      IF(\n        OR(\n          TYPE(item) = \"TrueClass\",\n          TYPE(item) = \"FalseClass\",\n          TYPE(item) = \"Integer\"\n        ),\n        IS_EMPTY(TEXT(item)),\n        IS_EMPTY(item)\n      )\n    )\n  )\n)"
        }
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": "52e0649e3d147759de03210df9686e0b4a86587edd0fde896e11fae52acf1f7e",
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null,
      "schedule": null
    },
    {
      "type": "Agents::EventTransformationAgent",
      "name": "Delay For 2 Seconds",
      "disabled": false,
      "description": null,
      "guid": "b6dc8321dddddf9df5c868784e0f7571",
      "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:28dc32560984e665ef90435877d2b71b",
      "options": {
        "mode": "delay",
        "seconds": "5"
      },
      "reporting": {
        "time_saved_value": 0,
        "time_saved_unit": "minutes"
      },
      "monitoring": {
        "monitor_all_events": false,
        "monitor_failures": false,
        "monitor_no_events_emitted": null
      },
      "template": {
        "created_from_template_guid": null,
        "created_from_template_version": null,
        "template_tags": []
      },
      "width": null
    }
  ],
  "diagram_notes": [
    {
      "content": "# Take My Meeting - PTO Coverage Workflow\n\n## Overview\nThis workflow allows team members to request coverage for meetings while they're on PTO. It automatically:\n- Pulls calendar events during selected PTO dates\n- Identifies available team members in the same timezone\n- Posts a Slack message with claim buttons for each meeting\n- Updates messages in real time when meetings are claimed\n- Records who took what, when, and from whom\n\n## Setup Instructions\n\n### 1. Required Credentials\n- **Slack Bot Token**: Create a Slack app with the following scopes:\n  - `channels:read`, `groups:read`, `im:read`, `mpim:read`\n  - `users.profile:read`\n  - `users:read.email`\n  - `chat:write`\n- **Google Calendar API**: Create credentials with `https://www.googleapis.com/auth/calendar.readonly` scope\n\n### 2. Record Types\nCreate two record types in Tines:\n\n#### Team Members Record Type\nFields:\n- `real_name` (Text)\n- `email` (Text)\n- `user_id` (Text)\n- `dm_id` (Text)\n- `Location Area` (Text)\n\n#### PTO Meeting Record Type\nFields:\n- `meeting_id` (Text)\n- `record_type` (Text)\n- `action_id` (Text)\n- `slack_channel_id` (Text)\n- `slack_message_ts` (Text)\n- `submitter_email` (Text)\n- `status` (Text)\n- `meeting_details_title` (Text)\n- `meeting_details_date` (Timestamp)\n- `meeting_details_calendar_event_URL` (Text)\n- `posted_at` (Text)\n- `claimed_by` (Text)\n- `claimed_at_ts` (Text)\n- `reminders_count` (Number)\n- `last_reminder_at` (Text)\n- `submitter_location` (Text)\n- `submitter_time_off` (Text)\n- `run_id` (Text)\n- `meeting_details_vitally` (Text)\n- `meeting_details_description` (Text)\n- `message_url` (Text)\n\n### 3. Slack Channels\n- Create a channel for PTO coverage requests\n- Note the channel ID for configuration\n\n### 4. Workflow Configuration\nReplace the following placeholders in the workflow:\n- All credential references (`CREDENTIAL.your_*`)\n- Channel IDs (`YOUR_*_CHANNEL_ID`)\n- Webhook path and secret\n- Record type IDs\n- Record field IDs\n\n### 5. Customization\n- Update form text and messaging to match your organization's terminology\n- Customize timezone groupings in the workflow if needed\n- Update any references to \"Team Member\" to match your organization's role names\n",
      "position": [
        -975,
        -1215
      ],
      "guid": "6f076dc086a43749590ebd2b1fee9f05",
      "width": 476
    },
    {
      "content": "# Take My Meeting!",
      "position": [
        -810,
        -1380
      ],
      "guid": "d3c6f35ace4f67f1e70972be4ff3adc2",
      "width": 322
    },
    {
      "content": "## Response!",
      "position": [
        1320,
        -1275
      ],
      "guid": "e3192f54675e1b03ff7b3e2df90c5d0f",
      "width": 183
    }
  ],
  "links": [
    {
      "source": 0,
      "receiver": 2
    },
    {
      "source": 1,
      "receiver": 3
    },
    {
      "source": 2,
      "receiver": 1
    },
    {
      "source": 3,
      "receiver": 6
    },
    {
      "source": 4,
      "receiver": 27
    },
    {
      "source": 6,
      "receiver": 5
    },
    {
      "source": 7,
      "receiver": 9
    },
    {
      "source": 8,
      "receiver": 10
    },
    {
      "source": 9,
      "receiver": 12
    },
    {
      "source": 10,
      "receiver": 14
    },
    {
      "source": 11,
      "receiver": 13
    },
    {
      "source": 12,
      "receiver": 11
    },
    {
      "source": 13,
      "receiver": 8
    },
    {
      "source": 14,
      "receiver": 15
    },
    {
      "source": 15,
      "receiver": 16
    },
    {
      "source": 16,
      "receiver": 45
    },
    {
      "source": 17,
      "receiver": 7
    },
    {
      "source": 18,
      "receiver": 17
    },
    {
      "source": 19,
      "receiver": 18
    },
    {
      "source": 20,
      "receiver": 21
    },
    {
      "source": 21,
      "receiver": 22
    },
    {
      "source": 22,
      "receiver": 23
    },
    {
      "source": 23,
      "receiver": 24
    },
    {
      "source": 25,
      "receiver": 26
    },
    {
      "source": 26,
      "receiver": 58
    },
    {
      "source": 27,
      "receiver": 65
    },
    {
      "source": 28,
      "receiver": 38
    },
    {
      "source": 28,
      "receiver": 78
    },
    {
      "source": 29,
      "receiver": 30
    },
    {
      "source": 30,
      "receiver": 35
    },
    {
      "source": 31,
      "receiver": 38
    },
    {
      "source": 32,
      "receiver": 33
    },
    {
      "source": 33,
      "receiver": 31
    },
    {
      "source": 34,
      "receiver": 77
    },
    {
      "source": 35,
      "receiver": 75
    },
    {
      "source": 36,
      "receiver": 51
    },
    {
      "source": 39,
      "receiver": 40
    },
    {
      "source": 39,
      "receiver": 42,
      "link_type": "secondary"
    },
    {
      "source": 40,
      "receiver": 41
    },
    {
      "source": 41,
      "receiver": 74
    },
    {
      "source": 42,
      "receiver": 44
    },
    {
      "source": 42,
      "receiver": 61,
      "link_type": "secondary"
    },
    {
      "source": 43,
      "receiver": 52
    },
    {
      "source": 44,
      "receiver": 72
    },
    {
      "source": 45,
      "receiver": 25
    },
    {
      "source": 46,
      "receiver": 47
    },
    {
      "source": 47,
      "receiver": 48
    },
    {
      "source": 48,
      "receiver": 49
    },
    {
      "source": 51,
      "receiver": 79,
      "link_type": "secondary"
    },
    {
      "source": 51,
      "receiver": 81
    },
    {
      "source": 52,
      "receiver": 53
    },
    {
      "source": 53,
      "receiver": 55
    },
    {
      "source": 53,
      "receiver": 57
    },
    {
      "source": 54,
      "receiver": 57
    },
    {
      "source": 55,
      "receiver": 56
    },
    {
      "source": 56,
      "receiver": 54
    },
    {
      "source": 58,
      "receiver": 59
    },
    {
      "source": 59,
      "receiver": 8,
      "link_type": "secondary"
    },
    {
      "source": 59,
      "receiver": 60
    },
    {
      "source": 59,
      "receiver": 62
    },
    {
      "source": 61,
      "receiver": 29,
      "link_type": "secondary"
    },
    {
      "source": 61,
      "receiver": 64
    },
    {
      "source": 62,
      "receiver": 36
    },
    {
      "source": 64,
      "receiver": 67
    },
    {
      "source": 65,
      "receiver": 34,
      "link_type": "secondary"
    },
    {
      "source": 65,
      "receiver": 68
    },
    {
      "source": 67,
      "receiver": 63,
      "link_type": "secondary"
    },
    {
      "source": 67,
      "receiver": 66
    },
    {
      "source": 68,
      "receiver": 69
    },
    {
      "source": 69,
      "receiver": 70
    },
    {
      "source": 70,
      "receiver": 71
    },
    {
      "source": 71,
      "receiver": 77
    },
    {
      "source": 72,
      "receiver": 43,
      "link_type": "secondary"
    },
    {
      "source": 72,
      "receiver": 73
    },
    {
      "source": 73,
      "receiver": 52
    },
    {
      "source": 74,
      "receiver": 46
    },
    {
      "source": 75,
      "receiver": 28,
      "link_type": "secondary"
    },
    {
      "source": 75,
      "receiver": 76
    },
    {
      "source": 76,
      "receiver": 38
    },
    {
      "source": 76,
      "receiver": 78
    },
    {
      "source": 77,
      "receiver": 39
    },
    {
      "source": 78,
      "receiver": 32
    },
    {
      "source": 79,
      "receiver": 50
    },
    {
      "source": 80,
      "receiver": 37
    },
    {
      "source": 81,
      "receiver": 80
    }
  ],
  "diagram_layout": "{\"00dcccc91b48f68ae34d1028c1ec59a6\":[-525,1470],\"010a612461f23138710621fdc2cb1644\":[-360,-375],\"0354563540b6163aaf859d5580c47b07\":[1335,-120],\"0614224276591140bbc04739559a921d\":[2115,-195],\"0b664099c360e480120041f6bd73f2ec\":[-780,-210],\"0ec9e84a5e963c85ef8d7adf1f1d96be\":[1080,-225],\"0fc3e86d34597137272510c1a6a5200e\":[2130,570],\"0fc45632b63ba8e44a8654e925036338\":[570,-120],\"18b18cb9da7839b7f7b7594af2a6edea\":[-780,-285],\"1a14f2e8fcce859a6898b3d558ebf886\":[1080,30],\"1c94b9e92199572c2e746b8aff465aec\":[1065,-345],\"1d21106434d26cafb045882dfcd8ef5a\":[1065,-720],\"1dc0d01ecc42110493f34c5879815f53\":[-360,-225],\"23608b14c45847c0a1ed5105bd124ab9\":[1320,-1110],\"2a6bd61052d2fcd9d873d91c46de4bbf\":[-360,-1020],\"2aec5128b58aab2408143ab46ff1a1eb\":[1335,-570],\"2e749c74061b901e9fe0eecaafbc728f\":[1065,-945],\"2ea99c372a831d452fe8a8ce657f1b80\":[-780,90],\"33d9242f4aba10458b650e91df716682\":[570,-345],\"33f366b4f1347735d898ff1051c960b0\":[-360,750],\"35cb4172497d148d0d00314472cf6c45\":[-360,360],\"3a1c1db1641f33bb757eb839aab678b0\":[-360,-300],\"44a25b4b940dc4f385f72615d8b66d7e\":[2130,495],\"45b135b6a07e5fec3703445a118b09df\":[-360,1080],\"46587c42aa2464ceaa34688e0fbf8f57\":[1080,300],\"4c40f372d37f3d3e718111062c4dcdb6\":[-360,-930],\"5a87ad611970d8e40fcedfa43ed58485\":[2115,-30],\"5b86f2dd18313ee7e205c92cdc40fb02\":[2115,-270],\"61cf547538ae2e8741522256a286c22b\":[1320,-1185],\"623349d4d4b05df245cfc1942f897aad\":[2130,405],\"65435e178f383e6ffd4b796a57d5a9f5\":[15,1155],\"654bc58b108e4d4f9c3a43f8e20c268e\":[1335,-495],\"678af7fcf1f6ec127109efd42a8c8587\":[-780,-135],\"6802b71ae51e8d1b21b69e2aa46519ff\":[-360,660],\"684e25a10defaf397cd063c93aa76e12\":[1320,-1035],\"6ed2cfe467234be6a2eb1a7d01e4006c\":[-360,-75],\"707ba6e3075e9ac247dd4ae039341dd3\":[-360,-150],\"70c486b95307712f4584f410437c6222\":[570,-495],\"72e81bcbe53ee05c22e4e3b54f6eb986\":[-780,-60],\"7464f73183d1db470b8add7cc79011b9\":[570,-420],\"761197b9984f3c4510f219058c66c5f4\":[2175,300],\"7dc9d0c4b96368b57c67aeddc594e452\":[-360,585],\"810bb07a49b4023c7bce18aa9daf7858\":[570,-195],\"81eb21ff5269c178ba7312cdfced0983\":[1335,-420],\"83834e944b7374b354d000cec1592b23\":[1065,-420],\"888781a92d95eaae9d9339f835c5dabd\":[2130,135],\"889e8becd39727cc433f4bc2e392b3ac\":[1335,-630],\"88b7a53bec333591fbc30b3c4c3f6f69\":[570,-30],\"88d851893f3576b669f834bf0bc2985e\":[-585,525],\"8eb659a05323bd188e51174cc2032348\":[1080,375],\"941bd45838d86df23850175ddc0a2e24\":[570,-270],\"95c620bbecb8f2891910d8092e856831\":[1605,-120],\"9752d266a0d63bf12e45db088f8a1798\":[-360,1155],\"997770600f676e2bef54b86c6c0cdb01\":[-255,1395],\"9f2fbcb1153ca1c5669f1aeda28902ff\":[-360,435],\"a5e6e3445dc3f2395ce0b7e852f8a8b3\":[900,-225],\"ad394ae2d8ef6ab244aaa071cdedcbda\":[-585,810],\"b5794d72674bc7bf4814cb0abd0c37e1\":[1065,-795],\"b6dc8321dddddf9df5c868784e0f7571\":[-525,1395],\"b812e6fab2cb25db74094fd4d00a8512\":[1065,-870],\"c0b0387fe365c25a520b7d921d2a581d\":[1080,135],\"c325619dee3ffdbaf002ac16a07b95be\":[-255,1485],\"c379d10692b4181a9e7d1204c0325e39\":[-360,-645],\"c3f2bdba67d724cc4fcc0aed3f981189\":[1920,135],\"c6ea20ae73156a4c4281dfe9dc56598c\":[-585,660],\"c8fbace45f59b3fbe3d6d9916dd95b2a\":[1080,210],\"c91199e370e632ea9e27d8467c91896b\":[1335,-780],\"c92a9cf5dae468a82e9dfca19a2586cb\":[1335,-225],\"cce2158b7ceb88376716a454504f7aa0\":[1335,-300],\"cd729ad4a8e5f54a947e58a3b1964e3d\":[-360,270],\"d9fa55256bbe991d95151255f1e6ba31\":[2115,45],\"da3d67112ae302e5ec5dc084040da642\":[2175,225],\"dcae965a6ed9f496b9536dce44f3371c\":[1080,-60],\"e5fd916f7e28f4d03edf1be15e30fe69\":[-780,15],\"e8af1ddb1cf65c0e704f8a3d20a8666f\":[-585,600],\"ee8d2d183a2a99bf337c842343fb48d5\":[-360,1320],\"ef7dd81313c24cf0f5da0162087e750f\":[-360,-1335],\"f20bfee4d0512bc6138f214e323ba778\":[-360,195],\"f264effd015b4a94e6457c3f7ebecaec\":[-525,1575],\"f41058c2047fde37feb984d2d3d44a30\":[-360,1230],\"fb4d50027f09ab5bfd9b18802ba7c302\":[-585,735],\"ff7719708d9acc6b1649ff0923085bc0\":[-360,510]}",
  "story_library_metadata": {},
  "monitor_failures": false,
  "synchronous_webhooks_enabled": false,
  "integrations": [
    {
      "action_inputs": [
        {
          "name": "Channel / User ID",
          "description": "You can use a channel name (like ‘#general’) or an ID (like ‘C1234567890’). For non-public channels, specify the ID; this includes private channels, multi-person direct message channels (use the group ID), or DMs to a specific user (use the user ID).",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"YOUR_TEAM_CHANNEL_ID\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1073741824,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Icon emoji",
          "description": "Emoji to use as the icon for this message (i.e. :chart_with_upwards_trend:). Overrides Icon URL input.",
          "required": false,
          "type": "TEXT",
          "ranking": 1610612736,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Icon URL",
          "description": "URL to an image to use as the icon for this message.",
          "required": false,
          "type": "TEXT",
          "ranking": 1879048192,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Link names?",
          "description": "Find and link user groups. No longer supports linking individual users; use syntax shown in [Mentioning Users](https://api.slack.com/reference/surfaces/formatting#mentioning-users) instead.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2013265920,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Markdown",
          "description": "Select 'no' to disable Slack markup parsing. Enabled by default.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2080374784,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Parse",
          "description": "Change how messages are treated. See [further details](https://api.slack.com/methods/chat.postMessage#formatting).",
          "required": false,
          "type": "TEXT",
          "ranking": 2113929216,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Send reply to channel?",
          "description": "Used in conjunction with input 'Thread timestamp' and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to false.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2130706432,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Thread timestamp",
          "description": "Provide another message's ts value to make this message a reply. Avoid using a reply's ts value; use its parent instead.",
          "required": false,
          "type": "TEXT",
          "ranking": 2139095040,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Unfurl media?",
          "description": "Select 'no' to disable unfurling of media content.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2143289344,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Username",
          "description": "Specify your bot's username that will send the message.",
          "required": false,
          "type": "TEXT",
          "ranking": 2145386496,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message",
          "description": "Use [Slack's Block Kit Builder](https://app.slack.com/block-kit-builder) to build your message. Then, click the 'Copy Payload' button on the top right of the block kit builder and paste it into the ‘Plain code’ tab here when you’re done. ",
          "required": false,
          "type": "OBJECT",
          "ranking": 2146435072,
          "value": "\"=explode_messages_to_items.individual_item.blocks\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Unfurl links?",
          "description": "Select 'yes' to enable unfurling of primarily text-based content.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2146959360,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Metadata",
          "description": "JSON object with event_type and event_payload fields, presented as a URL-encoded string. Metadata you post to Slack is accessible to any app or user who is a member of that workspace. ex: {\"event_type\": \"task_created\", \"event_payload\": { \"id\": \"11223\", \"title\": \"Redesign Homepage\"}}",
          "required": false,
          "type": "OBJECT",
          "ranking": 2147221504,
          "value": "{\"event_type\":\"task_created\",\"event_payload\":{\"title\":\"<<explode_messages_to_items.individual_item.text>>\",\"meeting_id\":\"<<explode_messages_to_items.individual_item.meeting_id>>\",\"run_id\":\"<<generate_run_id.run_id>>\",\"action_id\":\"<<explode_messages_to_items.individual_item.action_id>>\",\"type\":\"Take My Meeting\"}}",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "00dcccc91b48f68ae34d1028c1ec59a6",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Google Calendar credential",
          "description": "",
          "required": true,
          "type": "CREDENTIAL",
          "ranking": 0,
          "value": "\"=CREDENTIAL.your_google_calendar_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Calendar ID",
          "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.",
          "required": true,
          "type": "TEXT",
          "ranking": 1073741824,
          "value": "\"<<IF(welcome_page.body.button = \\\"Next\\\",pick_dates.headers.email,pick_dates.body.email)>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Sync token",
          "description": "Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All events deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.\nThere are several query parameters that cannot be specified together with nextSyncToken to ensure consistency of the client state.",
          "required": false,
          "type": "TEXT",
          "ranking": 1610612736,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Private extended property",
          "description": "Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.",
          "required": false,
          "type": "TEXT",
          "ranking": 1879048192,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Shared extended property",
          "description": "Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.",
          "required": false,
          "type": "TEXT",
          "ranking": 2013265920,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Q",
          "description": "Free text search terms to find events that match these terms",
          "required": false,
          "type": "TEXT",
          "ranking": 2080374784,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Updated min",
          "description": "Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. The default is not to filter by last modification time.",
          "required": false,
          "type": "DATE",
          "ranking": 2130706432,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "iCal UID",
          "description": "Specifies an event ID in the iCalendar format to be provided in the response. Use this if you want to search for an event by its iCalendar ID.",
          "required": false,
          "type": "TEXT",
          "ranking": 2139095040,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Time zone",
          "description": "Time zone used in the response. The default is the time zone of the calendar.",
          "required": false,
          "type": "TEXT",
          "ranking": 2143289344,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Show hidden invitations",
          "description": "Whether to include hidden invitations in the result. The default is False.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2145386496,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Page token",
          "description": "Token specifying which result page to return.",
          "required": false,
          "type": "TEXT",
          "ranking": 2146435072,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Max results",
          "description": "Maximum number of events returned on one result page. The number of events in the resulting page may be less than this value, or none at all, even if there are more events matching the query. Incomplete pages can be detected by a non-empty nextPageToken field in the response. By default the value is 250 events. The page size can never be larger than 2500 events.",
          "required": false,
          "type": "NUMBER",
          "ranking": 2146959360,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Max attendees",
          "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned.",
          "required": false,
          "type": "NUMBER",
          "ranking": 2147221504,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Time max",
          "description": "Upper bound (exclusive) for an event's start time to filter by. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin is set, timeMax must be greater than timeMin.",
          "required": false,
          "type": "DATE",
          "ranking": 2147352576,
          "value": "\"=DATE(IF(IS_PRESENT(pick_dates.body.end_date),pick_dates.body.end_date,pick_dates.body.start_date), \\\"%Y-%m-%dT23:59:59\\\")\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Time min",
          "description": "Lower bound (exclusive) for an event's end time to filter by. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax is set, timeMin must be smaller than timeMax.",
          "required": false,
          "type": "DATE",
          "ranking": 2147418112,
          "value": "\"=DATE(pick_dates.body.start_date)\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Order by",
          "description": "The order of the events returned in the result. The default is an unspecified, stable order.",
          "required": false,
          "type": "OPTION",
          "ranking": 2147467264,
          "value": "\"\"",
          "options": [
            "startTime",
            "updated"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Single events",
          "description": "Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. The default is False.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2147475456,
          "value": "true",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Show deleted",
          "description": "Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. The default is False.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2147479552,
          "value": "true",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Event types",
          "description": "Event types to return. This parameter can be repeated multiple times to return events of different types. The default is [\"default\", \"focusTime\", \"outOfOffice\"].",
          "required": false,
          "type": "OPTION",
          "ranking": 2147481600,
          "value": "[\"default\"]",
          "options": [
            "default",
            "focusTime",
            "outOfOffice",
            "workingLocation",
            "birthday",
            "fromGmail"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        }
      ],
      "action_guid": "010a612461f23138710621fdc2cb1644",
      "product": "Google Calendar",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Trigger ID",
          "description": "A `trigger_id` received from another interaction",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<parse_the_takers.response.trigger_id>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "View Object",
          "description": "Modal content as a [view payload](https://api.slack.com/reference/surfaces/views).\n\nUse [Slack's Block Kit Builder](https://app.slack.com/block-kit-builder/THDD9K092#%7B%22type%22:%22modal%22,%22submit%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Submit%22,%22emoji%22:true%7D,%22close%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Cancel%22,%22emoji%22:true%7D,%22title%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Workplace%20check-in%22,%22emoji%22:true%7D,%22blocks%22:%5B%7B%22type%22:%22section%22,%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:wave:%20Hey%20David!%5Cn%5CnWe'd%20love%20to%20hear%20from%20you%20how%20we%20can%20make%20this%20place%20the%20best%20place%20you%E2%80%99ve%20ever%20worked.%22,%22emoji%22:true%7D%7D,%7B%22type%22:%22divider%22%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22You%20enjoy%20working%20here%20at%20Pistachio%20&%20Co%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22radio_buttons%22,%22options%22:%5B%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Strongly%20agree%22,%22emoji%22:true%7D,%22value%22:%221%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Agree%22,%22emoji%22:true%7D,%22value%22:%222%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Neither%20agree%20nor%20disagree%22,%22emoji%22:true%7D,%22value%22:%223%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Disagree%22,%22emoji%22:true%7D,%22value%22:%224%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Strongly%20disagree%22,%22emoji%22:true%7D,%22value%22:%225%22%7D%5D%7D%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22What%20do%20you%20want%20for%20our%20team%20weekly%20lunch?%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22multi_static_select%22,%22placeholder%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Select%20your%20favorites%22,%22emoji%22:true%7D,%22options%22:%5B%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:pizza:%20Pizza%22,%22emoji%22:true%7D,%22value%22:%22value-0%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:fried_shrimp:%20Thai%20food%22,%22emoji%22:true%7D,%22value%22:%22value-1%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:desert_island:%20Hawaiian%22,%22emoji%22:true%7D,%22value%22:%22value-2%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:meat_on_bone:%20Texas%20BBQ%22,%22emoji%22:true%7D,%22value%22:%22value-3%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:hamburger:%20Burger%22,%22emoji%22:true%7D,%22value%22:%22value-4%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:taco:%20Tacos%22,%22emoji%22:true%7D,%22value%22:%22value-5%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:green_salad:%20Salad%22,%22emoji%22:true%7D,%22value%22:%22value-6%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:stew:%20Indian%22,%22emoji%22:true%7D,%22value%22:%22value-7%22%7D%5D%7D%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22What%20can%20we%20do%20to%20improve%20your%20experience%20working%20here?%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22plain_text_input%22,%22multiline%22:true%7D%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Anything%20else%20you%20want%20to%20tell%20us?%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22plain_text_input%22,%22multiline%22:true%7D,%22optional%22:true%7D%5D%7D) to build your message. Then, click the 'Copy Payload' button on the top right of the block kit builder and paste it into the ‘Plain code’ tab here when you’re done. ",
          "required": true,
          "type": "OBJECT",
          "ranking": 1073741824,
          "value": "{\"type\":\"modal\",\"title\":{\"type\":\"plain_text\",\"text\":\"PTO Takeover\"},\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\":sparkles: _*Claimed by <<get_message_info.records[0].claimed_by>>*_ :sparkles:\"}},{\"type\":\"divider\"},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Title*\\n<<get_message_info.records[0].meeting_details_title>>\\n\\n*Description*\\n<<get_message_info.records[0].meeting_details_description>>\"},\"accessory\":{\"type\":\"overflow\",\"options\":[{\"text\":{\"type\":\"plain_text\",\"text\":\"Undo\",\"emoji\":true},\"value\":\"undo\"},{\"text\":{\"type\":\"plain_text\",\"text\":\"Delete Request\",\"emoji\":true},\"value\":\"delete\"}],\"action_id\":\"overflow-action\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Vitally Note* (if available)\"},\"accessory\":{\"type\":\"button\",\"text\":{\"type\":\"plain_text\",\"text\":\"Click Me!\",\"emoji\":true},\"value\":\"vitally_click\",\"url\":\"<<get_message_info.records[0].meeting_details_vitally>>\",\"action_id\":\"button-vitally-action\"}}],\"close\":{\"type\":\"plain_text\",\"text\":\"Close\"},\"private_metadata\":\"taking_it\",\"callback_id\":\"<<get_message_info.records[0].meeting_id>>\"}",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1610612736,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "0354563540b6163aaf859d5580c47b07",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Slack credential",
          "description": "Authentication token bearing required scopes.",
          "required": true,
          "type": "CREDENTIAL",
          "ranking": 0,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Channel ID",
          "description": "ID of the conversation to retrieve members for",
          "required": true,
          "type": "TEXT",
          "ranking": 1073741824,
          "value": "\"YOUR_TEAM_CHANNEL_ID\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Cursor",
          "description": "Cursor to paginate through collections of data",
          "required": false,
          "type": "TEXT",
          "ranking": 1610612736,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Limit",
          "description": "The maximum number of items to return. Defaults to 100.",
          "required": false,
          "type": "NUMBER",
          "ranking": 1879048192,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "18b18cb9da7839b7f7b7594af2a6edea",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Trigger ID",
          "description": "A `trigger_id` received from another interaction",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<parse_the_takers.response.trigger_id>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "View Object",
          "description": "Modal content as a [view payload](https://api.slack.com/reference/surfaces/views).\n\nUse [Slack's Block Kit Builder](https://app.slack.com/block-kit-builder/THDD9K092#%7B%22type%22:%22modal%22,%22submit%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Submit%22,%22emoji%22:true%7D,%22close%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Cancel%22,%22emoji%22:true%7D,%22title%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Workplace%20check-in%22,%22emoji%22:true%7D,%22blocks%22:%5B%7B%22type%22:%22section%22,%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:wave:%20Hey%20David!%5Cn%5CnWe'd%20love%20to%20hear%20from%20you%20how%20we%20can%20make%20this%20place%20the%20best%20place%20you%E2%80%99ve%20ever%20worked.%22,%22emoji%22:true%7D%7D,%7B%22type%22:%22divider%22%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22You%20enjoy%20working%20here%20at%20Pistachio%20&%20Co%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22radio_buttons%22,%22options%22:%5B%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Strongly%20agree%22,%22emoji%22:true%7D,%22value%22:%221%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Agree%22,%22emoji%22:true%7D,%22value%22:%222%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Neither%20agree%20nor%20disagree%22,%22emoji%22:true%7D,%22value%22:%223%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Disagree%22,%22emoji%22:true%7D,%22value%22:%224%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Strongly%20disagree%22,%22emoji%22:true%7D,%22value%22:%225%22%7D%5D%7D%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22What%20do%20you%20want%20for%20our%20team%20weekly%20lunch?%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22multi_static_select%22,%22placeholder%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Select%20your%20favorites%22,%22emoji%22:true%7D,%22options%22:%5B%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:pizza:%20Pizza%22,%22emoji%22:true%7D,%22value%22:%22value-0%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:fried_shrimp:%20Thai%20food%22,%22emoji%22:true%7D,%22value%22:%22value-1%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:desert_island:%20Hawaiian%22,%22emoji%22:true%7D,%22value%22:%22value-2%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:meat_on_bone:%20Texas%20BBQ%22,%22emoji%22:true%7D,%22value%22:%22value-3%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:hamburger:%20Burger%22,%22emoji%22:true%7D,%22value%22:%22value-4%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:taco:%20Tacos%22,%22emoji%22:true%7D,%22value%22:%22value-5%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:green_salad:%20Salad%22,%22emoji%22:true%7D,%22value%22:%22value-6%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:stew:%20Indian%22,%22emoji%22:true%7D,%22value%22:%22value-7%22%7D%5D%7D%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22What%20can%20we%20do%20to%20improve%20your%20experience%20working%20here?%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22plain_text_input%22,%22multiline%22:true%7D%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Anything%20else%20you%20want%20to%20tell%20us?%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22plain_text_input%22,%22multiline%22:true%7D,%22optional%22:true%7D%5D%7D) to build your message. Then, click the 'Copy Payload' button on the top right of the block kit builder and paste it into the ‘Plain code’ tab here when you’re done. ",
          "required": true,
          "type": "OBJECT",
          "ranking": 1073741824,
          "value": "{\"type\":\"modal\",\"title\":{\"type\":\"plain_text\",\"text\":\"PTO Takeover\"},\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"The meeting request for\\n<<IF(IS_PRESENT(get_message_info.records[0].meeting_details_title),get_message_info.records[0].meeting_details_title,get_base_message.title)>>\\nhas been deleted!\",\"verbatim\":true}}],\"close\":{\"type\":\"plain_text\",\"text\":\"Close\"},\"private_metadata\":\"taking_it\",\"callback_id\":\"<<get_message_info.records[0].meeting_id>>\"}",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1610612736,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "33d9242f4aba10458b650e91df716682",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "User email",
          "description": "Email of the user you'd like to send a message to.",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<get_an_event.body.organizer.email>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message",
          "description": "Use plain text, or [Slack formatting markup](https://slack.com/help/articles/202288908-Format-your-messages#Markup).",
          "required": true,
          "type": "TEXT",
          "ranking": 1073741824,
          "value": "\"*Hey <<search_organizer_csm_by_email.body.user.profile.first_name>> 👋*\\n\\n*_Heads up_* — <<find_submitter_info.records[0].real_name>> will be out on PTO (_<<get_message_info.records[0].submitter_time_off>>_), so <<find_taker_info.records[0].real_name>> will be covering for the following upcoming meeting:\\n\\n>*Title:* <<get_an_event.body.summary>>\\n>\\n>*Time/Date:* <<DATE(get_an_event.body.start.dateTime, \\\"%a, %b %d\\\")>> @ <<DATE(get_an_event.body.start.dateTime, \\\"%r %Z\\\", list_pto_events.body.timeZone)>>\\n\\nCan you please update the calendar invite to add <<find_taker_info.records[0].real_name>> onto the call?\\n\\n_\\\\<<<get_an_event.body.htmlLink>>|Click here to view the event details on Google Calendar>_\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack credential",
          "description": "",
          "required": true,
          "type": "CREDENTIAL",
          "ranking": 1610612736,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "44a25b4b940dc4f385f72615d8b66d7e",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "User email",
          "description": "Email of the user you'd like to send a message to.",
          "required": true,
          "type": "TEXT",
          "ranking": -1073741824,
          "value": "\"<<get_an_event.body.organizer.email>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message",
          "description": "Use plain text, or [Slack formatting markup](https://slack.com/help/articles/202288908-Format-your-messages#Markup).",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"*Hey <<search_organizer_csm_by_email.body.user.profile.first_name>> 👋*\\n\\n*:alert:* <<find_submitter_info.records[0].real_name>>'s meeting is up for grabs again!\\n\\n<<find_taker_info.records[0].real_name>> will no longer be taking the meeting. \\n\\nMeeting info below:\\n>*Title:* <<get_an_event.body.summary>>\\n>\\n>*Time/Date:* <<DATE(get_an_event.body.start.dateTime, \\\"%a, %b %d\\\")>> @ <<DATE(get_an_event.body.start.dateTime, \\\"%r %Z\\\", list_pto_events.body.timeZone)>>\\n>\\n>_\\\\<<<get_an_event.body.htmlLink>>|Click here to view the event details on Google Calendar>_\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack credential",
          "description": "",
          "required": true,
          "type": "CREDENTIAL",
          "ranking": 1073741824,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "46587c42aa2464ceaa34688e0fbf8f57",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Google Calendar credential",
          "description": "",
          "required": true,
          "type": "CREDENTIAL",
          "ranking": 0,
          "value": "\"=CREDENTIAL.your_google_calendar_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Calendar ID",
          "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.",
          "required": true,
          "type": "TEXT",
          "ranking": 1073741824,
          "value": "\"<<get_message_info.records[0].submitter_email>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Event ID",
          "description": "Event identifier.",
          "required": true,
          "type": "TEXT",
          "ranking": 1610612736,
          "value": "\"<<get_message_info.records[0].meeting_id>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Time zone",
          "description": "Time zone used in the response. The default is the time zone of the calendar.",
          "required": false,
          "type": "TEXT",
          "ranking": 1879048192,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Max attendees",
          "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned.",
          "required": false,
          "type": "NUMBER",
          "ranking": 2013265920,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        }
      ],
      "action_guid": "5b86f2dd18313ee7e205c92cdc40fb02",
      "product": "Google Calendar",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Email",
          "description": "Registered email address of the user being searched.",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<get_an_event.body.organizer.email>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1073741824,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "623349d4d4b05df245cfc1942f897aad",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Slack Credential",
          "description": "Authentication token bearing required scopes. tokens should be passed as an http authorization header or alternatively, as a post parameter.",
          "required": true,
          "type": "CREDENTIAL",
          "ranking": 0,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "User",
          "description": "User to retrieve profile info for.",
          "required": false,
          "type": "TEXT",
          "ranking": 1073741824,
          "value": "\"<<explode_member.member>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Include labels",
          "description": "Include labels for each id in custom profile fields. using this parameter will heavily rate-limit your requests and is not recommended.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 1610612736,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "678af7fcf1f6ec127109efd42a8c8587",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Channel ID",
          "description": "The channel ID (e.g., ‘C1234567890’) containing the message to be deleted. This method will not recognize channel names.",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<IF(IS_PRESENT(get_message_info),get_message_info.records[0].slack_channel_id,get_base_message.slack_channel_id)>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message timestamp",
          "description": "The timestamp of the message to be deleted.",
          "required": true,
          "type": "TEXT",
          "ranking": 1073741824,
          "value": "\"<<IF(IS_PRESENT(get_message_info),get_message_info.records[0].slack_message_ts,get_base_message.slack_message_ts)>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1879048192,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "70c486b95307712f4584f410437c6222",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Channel ID",
          "description": "The channel ID (e.g., ‘C1234567890’) containing the message to be deleted. This method will not recognize channel names.",
          "required": true,
          "type": "TEXT",
          "ranking": -1073741824,
          "value": "\"<<gather_request_data.header_info[0].slack_channel_id>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message timestamp",
          "description": "The timestamp of the message to be deleted.",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<gather_request_data.header_info[0].slack_message_ts>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1073741824,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "88b7a53bec333591fbc30b3c4c3f6f69",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Trigger ID",
          "description": "A `trigger_id` received from another interaction",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<parse_the_takers.response.trigger_id>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "View Object",
          "description": "Modal content as a [view payload](https://api.slack.com/reference/surfaces/views).\n\nUse [Slack's Block Kit Builder](https://app.slack.com/block-kit-builder/THDD9K092#%7B%22type%22:%22modal%22,%22submit%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Submit%22,%22emoji%22:true%7D,%22close%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Cancel%22,%22emoji%22:true%7D,%22title%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Workplace%20check-in%22,%22emoji%22:true%7D,%22blocks%22:%5B%7B%22type%22:%22section%22,%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:wave:%20Hey%20David!%5Cn%5CnWe'd%20love%20to%20hear%20from%20you%20how%20we%20can%20make%20this%20place%20the%20best%20place%20you%E2%80%99ve%20ever%20worked.%22,%22emoji%22:true%7D%7D,%7B%22type%22:%22divider%22%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22You%20enjoy%20working%20here%20at%20Pistachio%20&%20Co%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22radio_buttons%22,%22options%22:%5B%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Strongly%20agree%22,%22emoji%22:true%7D,%22value%22:%221%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Agree%22,%22emoji%22:true%7D,%22value%22:%222%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Neither%20agree%20nor%20disagree%22,%22emoji%22:true%7D,%22value%22:%223%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Disagree%22,%22emoji%22:true%7D,%22value%22:%224%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Strongly%20disagree%22,%22emoji%22:true%7D,%22value%22:%225%22%7D%5D%7D%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22What%20do%20you%20want%20for%20our%20team%20weekly%20lunch?%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22multi_static_select%22,%22placeholder%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Select%20your%20favorites%22,%22emoji%22:true%7D,%22options%22:%5B%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:pizza:%20Pizza%22,%22emoji%22:true%7D,%22value%22:%22value-0%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:fried_shrimp:%20Thai%20food%22,%22emoji%22:true%7D,%22value%22:%22value-1%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:desert_island:%20Hawaiian%22,%22emoji%22:true%7D,%22value%22:%22value-2%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:meat_on_bone:%20Texas%20BBQ%22,%22emoji%22:true%7D,%22value%22:%22value-3%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:hamburger:%20Burger%22,%22emoji%22:true%7D,%22value%22:%22value-4%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:taco:%20Tacos%22,%22emoji%22:true%7D,%22value%22:%22value-5%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:green_salad:%20Salad%22,%22emoji%22:true%7D,%22value%22:%22value-6%22%7D,%7B%22text%22:%7B%22type%22:%22plain_text%22,%22text%22:%22:stew:%20Indian%22,%22emoji%22:true%7D,%22value%22:%22value-7%22%7D%5D%7D%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22What%20can%20we%20do%20to%20improve%20your%20experience%20working%20here?%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22plain_text_input%22,%22multiline%22:true%7D%7D,%7B%22type%22:%22input%22,%22label%22:%7B%22type%22:%22plain_text%22,%22text%22:%22Anything%20else%20you%20want%20to%20tell%20us?%22,%22emoji%22:true%7D,%22element%22:%7B%22type%22:%22plain_text_input%22,%22multiline%22:true%7D,%22optional%22:true%7D%5D%7D) to build your message. Then, click the 'Copy Payload' button on the top right of the block kit builder and paste it into the ‘Plain code’ tab here when you’re done. ",
          "required": true,
          "type": "OBJECT",
          "ranking": 1073741824,
          "value": "{\"type\":\"modal\",\"title\":{\"type\":\"plain_text\",\"text\":\"PTO Takeover\"},\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Title*\\n<<get_message_info.records[0].meeting_details_title>>\\n\\n*Description*\\n<<get_message_info.records[0].meeting_details_description>>\"},\"accessory\":{\"type\":\"overflow\",\"options\":[{\"text\":{\"type\":\"plain_text\",\"text\":\"Delete Request\",\"emoji\":true},\"value\":\"delete\"}],\"action_id\":\"overflow-action\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Vitally Note* (if available)\"},\"accessory\":{\"type\":\"button\",\"text\":{\"type\":\"plain_text\",\"text\":\"Click Me!\",\"emoji\":true},\"value\":\"vitally_click\",\"url\":\"<<get_message_info.records[0].meeting_details_vitally>>\",\"action_id\":\"button-vitally-action\"}}],\"close\":{\"type\":\"plain_text\",\"text\":\"Close\"},\"submit\":{\"type\":\"plain_text\",\"text\":\"I'll take it!\"},\"private_metadata\":\"taking_it\",\"callback_id\":\"<<get_message_info.records[0].meeting_id>>\"}",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1610612736,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "95c620bbecb8f2891910d8092e856831",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Channel / User ID",
          "description": "You can use a channel name (like ‘#general’) or an ID (like ‘C1234567890’). For non-public channels, specify the ID; this includes private channels, multi-person direct message channels (use the group ID), or DMs to a specific user (use the user ID).",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"YOUR_TEAM_CHANNEL_ID\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1073741824,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Icon emoji",
          "description": "Emoji to use as the icon for this message (i.e. :chart_with_upwards_trend:). Overrides Icon URL input.",
          "required": false,
          "type": "TEXT",
          "ranking": 1610612736,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Icon URL",
          "description": "URL to an image to use as the icon for this message.",
          "required": false,
          "type": "TEXT",
          "ranking": 1879048192,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Link names?",
          "description": "Find and link user groups. No longer supports linking individual users; use syntax shown in [Mentioning Users](https://api.slack.com/reference/surfaces/formatting#mentioning-users) instead.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2013265920,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Markdown",
          "description": "Select 'no' to disable Slack markup parsing. Enabled by default.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2080374784,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Parse",
          "description": "Change how messages are treated. See [further details](https://api.slack.com/methods/chat.postMessage#formatting).",
          "required": false,
          "type": "TEXT",
          "ranking": 2113929216,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Send reply to channel?",
          "description": "Used in conjunction with input 'Thread timestamp' and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to false.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2130706432,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Thread timestamp",
          "description": "Provide another message's ts value to make this message a reply. Avoid using a reply's ts value; use its parent instead.",
          "required": false,
          "type": "TEXT",
          "ranking": 2139095040,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Unfurl media?",
          "description": "Select 'no' to disable unfurling of media content.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2143289344,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Username",
          "description": "Specify your bot's username that will send the message.",
          "required": false,
          "type": "TEXT",
          "ranking": 2145386496,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message",
          "description": "Use [Slack's Block Kit Builder](https://app.slack.com/block-kit-builder) to build your message. Then, click the 'Copy Payload' button on the top right of the block kit builder and paste it into the ‘Plain code’ tab here when you’re done. ",
          "required": false,
          "type": "OBJECT",
          "ranking": 2146435072,
          "value": "\"=explode_messages_to_items.individual_item.blocks\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Unfurl links?",
          "description": "Select 'yes' to enable unfurling of primarily text-based content.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2146959360,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Metadata",
          "description": "JSON object with event_type and event_payload fields, presented as a URL-encoded string. Metadata you post to Slack is accessible to any app or user who is a member of that workspace. ex: {\"event_type\": \"task_created\", \"event_payload\": { \"id\": \"11223\", \"title\": \"Redesign Homepage\"}}",
          "required": false,
          "type": "OBJECT",
          "ranking": 2147221504,
          "value": "{\"event_type\":\"task_created\",\"event_payload\":{\"title\":\"<<explode_messages_to_items.individual_item.text>>\",\"meeting_id\":\"<<explode_messages_to_items.individual_item.meeting_id>>\",\"run_id\":\"<<generate_run_id.run_id>>\",\"action_id\":\"<<explode_messages_to_items.individual_item.action_id>>\",\"type\":\"Take My Meeting\"}}",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "997770600f676e2bef54b86c6c0cdb01",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Channel ID",
          "description": "The channel ID (e.g. ‘C1234567890’) containing the message to be updated. This method will not recognize channel names.",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<get_message_info.records[0].slack_channel_id>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message",
          "description": "Use plain text, or [Slack formatting markup](https://slack.com/help/articles/202288908-Format-your-messages#Markup). If 'Blocks message' input is used, this input will be used as fallback text for notifications only.",
          "required": true,
          "type": "TEXT",
          "ranking": 1073741824,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message timestamp",
          "description": "The timestamp of the message to be updated.",
          "required": true,
          "type": "TEXT",
          "ranking": 1610612736,
          "value": "\"<<get_message_info.records[0].slack_message_ts>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 2013265920,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Metadata",
          "description": "JSON object with event_type and event_payload fields, presented as a URL-encoded string. Metadata you post to Slack is accessible to any app or user who is a member of that workspace. ex: {\"event_type\": \"task_created\", \"event_payload\": { \"id\": \"11223\", \"title\": \"Redesign Homepage\"}}",
          "required": false,
          "type": "OBJECT",
          "ranking": 2146435072,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Parse",
          "description": "Change how messages are treated. Defaults to 'client'. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, 'client'.",
          "required": false,
          "type": "OPTION",
          "ranking": 2146959360,
          "value": "\"\"",
          "options": [
            "none",
            "full"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Reply broadcast?",
          "description": "Select 'yes' to broadcast an existing thread reply to make it visible to everyone in the channel or conversation.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2147221504,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Link names?",
          "description": "Find and link channel names and usernames. Defaults to 'no'. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, none.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2147352576,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "File IDs",
          "description": "Array of new file IDs that will be sent with this message. Example: F013GKY52QK,F013GL22D0T",
          "required": false,
          "type": "TEXT",
          "ranking": 2147418112,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Blocks message",
          "description": "Use [Slack's Block Kit Builder](https://app.slack.com/block-kit-builder) to build your message. Then, click the 'Copy Payload' button on the top right of the block kit builder and paste it into the ‘Plain code’ tab here when you’re done. ",
          "required": false,
          "type": "OBJECT",
          "ranking": 2147450880,
          "value": "\"=update_cse_block\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "a5e6e3445dc3f2395ce0b7e852f8a8b3",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 0,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Channel",
          "description": "Conversation ID to fetch history for. Ex: \"C1234567890\"",
          "required": true,
          "type": "TEXT",
          "ranking": 1069547520,
          "value": "\"<<get_message_info.records[0].slack_channel_id>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Cursor",
          "description": "Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata. Default value fetches the first \"page\" of the collection. See [pagination](https://api.slack.com/apis/pagination) for more detail.",
          "required": false,
          "type": "TEXT",
          "ranking": 2146435072,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Include all metadata?",
          "description": "Return all metadata associated with this message.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2146959360,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Inclusive",
          "description": "Include messages with `oldest` or `latest` timestamps in results. Ignored unless either timestamp is specified.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2147221504,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Latest",
          "description": "Only messages before this Unix timestamp will be included in results. Default is the current time.",
          "required": false,
          "type": "TEXT",
          "ranking": 2147352576,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Limit",
          "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Defaults to 100.",
          "required": false,
          "type": "NUMBER",
          "ranking": 2147418112,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Oldest",
          "description": "Only messages after this Unix timestamp will be included in results.",
          "required": false,
          "type": "TEXT",
          "ranking": 2147450880,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "b5794d72674bc7bf4814cb0abd0c37e1",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Channel ID",
          "description": "The channel ID (e.g. ‘C1234567890’) containing the message to be updated. This method will not recognize channel names.",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<get_message_info.records[0].slack_channel_id>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message",
          "description": "Use plain text, or [Slack formatting markup](https://slack.com/help/articles/202288908-Format-your-messages#Markup). If 'Blocks message' input is used, this input will be used as fallback text for notifications only.",
          "required": true,
          "type": "TEXT",
          "ranking": 1073741824,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message timestamp",
          "description": "The timestamp of the message to be updated.",
          "required": true,
          "type": "TEXT",
          "ranking": 1610612736,
          "value": "\"<<get_message_info.records[0].slack_message_ts>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 2013265920,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Metadata",
          "description": "JSON object with event_type and event_payload fields, presented as a URL-encoded string. Metadata you post to Slack is accessible to any app or user who is a member of that workspace. ex: {\"event_type\": \"task_created\", \"event_payload\": { \"id\": \"11223\", \"title\": \"Redesign Homepage\"}}",
          "required": false,
          "type": "OBJECT",
          "ranking": 2146435072,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Parse",
          "description": "Change how messages are treated. Defaults to 'client'. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, 'client'.",
          "required": false,
          "type": "OPTION",
          "ranking": 2146959360,
          "value": "\"\"",
          "options": [
            "none",
            "full"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Reply broadcast?",
          "description": "Select 'yes' to broadcast an existing thread reply to make it visible to everyone in the channel or conversation.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2147221504,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Link names?",
          "description": "Find and link channel names and usernames. Defaults to 'no'. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, none.",
          "required": false,
          "type": "BOOLEAN",
          "ranking": 2147352576,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "File IDs",
          "description": "Array of new file IDs that will be sent with this message. Example: F013GKY52QK,F013GL22D0T",
          "required": false,
          "type": "TEXT",
          "ranking": 2147418112,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Blocks message",
          "description": "Use [Slack's Block Kit Builder](https://app.slack.com/block-kit-builder) to build your message. Then, click the 'Copy Payload' button on the top right of the block kit builder and paste it into the ‘Plain code’ tab here when you’re done. ",
          "required": false,
          "type": "OBJECT",
          "ranking": 2147450880,
          "value": "\"=update_cse_block\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "c3f2bdba67d724cc4fcc0aed3f981189",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Email",
          "description": "Registered email address of the user being searched.",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<get_an_event.body.organizer.email>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1073741824,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "c8fbace45f59b3fbe3d6d9916dd95b2a",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "User email",
          "description": "Email of the user you'd like to send a message to.",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<find_taker_info.records[0].email>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Message",
          "description": "Use plain text, or [Slack formatting markup](https://slack.com/help/articles/202288908-Format-your-messages#Markup).",
          "required": true,
          "type": "TEXT",
          "ranking": 1073741824,
          "value": "\"*Hey <<SPLIT(find_taker_info.records[0].real_name,\\\" \\\")[0]>> 👋*\\n\\nJust sending over the meeting info you took for <<SPLIT(find_submitter_info.records[0].real_name,\\\" \\\")[0]>>. \\n\\n>*Title:* `<<get_an_event.body.summary>>`\\n>\\n>*Time/Date:* `<<DATE(get_an_event.body.start.dateTime, \\\"%a, %b %d\\\")>> @ <<DATE(get_an_event.body.start.dateTime, \\\"%r %Z\\\", list_pto_events.body.timeZone)>>`\\n>\\n>*Info:* \\n> ```\\n<<get_message_info.records[0].meeting_details_description>>```\\n><%if IS_PRESENT(get_message_info.records[0].meeting_details_vitally)%>\\\\<<<get_message_info.records[0].meeting_details_vitally>>|Vitally Note><%else \\\"No Nitally note was added.\\\"%><%endif%>\\n>To view the event details on Google Calendar, click \\\\<<<get_an_event.body.htmlLink>>|here>.\\n\\nTo view the original posting, click \\\\<<<get_message_info.records[0].message_url>>|here>.\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack credential",
          "description": "",
          "required": true,
          "type": "CREDENTIAL",
          "ranking": 1610612736,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "da3d67112ae302e5ec5dc084040da642",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Calendar ID",
          "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.",
          "required": true,
          "type": "TEXT",
          "ranking": -1431655765,
          "value": "\"<<get_message_info.records[0].submitter_email>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Google Calendar credential",
          "description": "",
          "required": true,
          "type": "CREDENTIAL",
          "ranking": -715827882,
          "value": "\"=CREDENTIAL.your_google_calendar_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Event ID",
          "description": "Event identifier.",
          "required": true,
          "type": "TEXT",
          "ranking": 1789569707,
          "value": "\"<<get_message_info.records[0].meeting_id>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Time zone",
          "description": "Time zone used in the response. The default is the time zone of the calendar.",
          "required": false,
          "type": "TEXT",
          "ranking": 1968526677,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        },
        {
          "name": "Max attendees",
          "description": "The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned.",
          "required": false,
          "type": "NUMBER",
          "ranking": 2058005162,
          "value": "\"\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": true,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "\"{}\""
        }
      ],
      "action_guid": "dcae965a6ed9f496b9536dce44f3371c",
      "product": "Google Calendar",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Email",
          "description": "Registered email address of the user being searched.",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<get_user_profile.body.profile.email>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1610612736,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "e5fd916f7e28f4d03edf1be15e30fe69",
      "product": "Slack",
      "action_options_keys": []
    },
    {
      "action_inputs": [
        {
          "name": "Email",
          "description": "Registered email address of the user being searched.",
          "required": true,
          "type": "TEXT",
          "ranking": 0,
          "value": "\"<<explode_meeting_emails.individual_item>>\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        },
        {
          "name": "Slack Credential",
          "description": "",
          "required": false,
          "type": "CREDENTIAL",
          "ranking": 1610612736,
          "value": "\"=CREDENTIAL.your_slack_bot_credential\"",
          "options": [
            "Option 1",
            "Option 2"
          ],
          "is_collapsed": false,
          "sub_type": "HTML",
          "multi_select_enabled": false,
          "llm_json_schema": "{}"
        }
      ],
      "action_guid": "fb4d50027f09ab5bfd9b18802ba7c302",
      "product": "Slack",
      "action_options_keys": []
    }
  ],
  "parent_only_send_to_story": false,
  "keep_events_for": 604800,
  "reporting_status": true,
  "send_to_story_enabled": true,
  "entry_agent_guid": "61cf547538ae2e8741522256a286c22b",
  "exit_agent_guids": [
    "23608b14c45847c0a1ed5105bd124ab9"
  ],
  "api_entry_action_guids": [],
  "api_exit_action_guids": [],
  "send_to_story_access": "team",
  "send_to_story_access_source": 1,
  "send_to_story_skill_use_requires_confirmation": true,
  "pages": [
    {
      "containers": [
        {
          "guid": "eeeb053ffb9ff5c106add6eedcce2ea3",
          "ranking": 0,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "center",
          "loop": "",
          "spacing": "no_spacing"
        },
        {
          "guid": "4761e0d4ee03c38304c20fdaaa532f9f",
          "ranking": 1,
          "category": 0,
          "name": "Container",
          "layout": "horizontal",
          "alignment": "no_alignment",
          "loop": "",
          "spacing": "no_spacing"
        },
        {
          "guid": "da3593c3c72ad50d779ede3f9c3150ba",
          "ranking": 2,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "no_alignment",
          "loop": "",
          "spacing": "no_spacing"
        },
        {
          "guid": "4da6aa44e05463592e2bcbfe4c042c14",
          "ranking": 3,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "center",
          "loop": "",
          "spacing": "no_spacing"
        }
      ],
      "conditions": [
        {
          "container_guids": [
            "4761e0d4ee03c38304c20fdaaa532f9f"
          ],
          "condition_type": "show",
          "match_rule": "every_rule",
          "rules": [
            {
              "rule": "formula_is_true",
              "value": "=welcome_page.body.button = \"Super Secret \\nMngr Mode\"",
              "page_element_guid": null,
              "match_case": true
            }
          ]
        },
        {
          "container_guids": [
            "eeeb053ffb9ff5c106add6eedcce2ea3"
          ],
          "condition_type": "hide",
          "match_rule": "every_rule",
          "rules": [
            {
              "rule": "formula_is_true",
              "value": "=welcome_page.body.button = \"Super Secret \\nMngr Mode\"",
              "page_element_guid": null,
              "match_case": true
            }
          ]
        }
      ],
      "fields": [
        {
          "guid": "3bcc805cf38464407d2751bcce225842",
          "name": "Heading",
          "description": "",
          "required": false,
          "type": "TITLE",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "🌴 Out of Office, Out of Worries 🌴",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "eeeb053ffb9ff5c106add6eedcce2ea3",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "b43fb67a423afb2c390ae59b11123d2b",
          "name": "Paragraph",
          "description": "",
          "required": false,
          "type": "PARAGRAPH",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 1,
          "max_characters": null,
          "default_value": null,
          "content": "Congrats on your upcoming PTO! 🎉 Let’s make sure your meetings are covered while you’re out.\n\nGo ahead and select the dates you’ll be out of office.",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "eeeb053ffb9ff5c106add6eedcce2ea3",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "8a7ceee93ce71ae1914638ca77b85087",
          "name": "Heading",
          "description": "",
          "required": false,
          "type": "TITLE",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "Alright, who's taking PTO?",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "4761e0d4ee03c38304c20fdaaa532f9f",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "d5017820e14b7eb676fa838df8952eeb",
          "name": "Email",
          "description": "",
          "required": true,
          "type": "EMAIL",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 1,
          "max_characters": null,
          "default_value": null,
          "content": null,
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "4761e0d4ee03c38304c20fdaaa532f9f",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "FULL",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "c03e167124904be208f571574c127fd3",
          "name": "Start Date",
          "description": "",
          "required": true,
          "type": "DATE",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": null,
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "da3593c3c72ad50d779ede3f9c3150ba",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "6cdecbf1988bb09f979b3a73264a4ab1",
          "name": "End Date",
          "description": "",
          "required": false,
          "type": "DATE",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 1,
          "max_characters": null,
          "default_value": null,
          "content": null,
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "da3593c3c72ad50d779ede3f9c3150ba",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "5563bb904a37cca867359f3432461592",
          "name": "Button",
          "description": "",
          "required": false,
          "type": "BUTTON",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "Next",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "4da6aa44e05463592e2bcbfe4c042c14",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        }
      ],
      "visibility": "tenant",
      "agent_guid": "c379d10692b4181a9e7d1204c0325e39",
      "success_message": "",
      "loading_message": "Please wait…",
      "logo_contents": null,
      "logo_filename": null,
      "display_logo": false,
      "icon": ":pencil2:",
      "sso_groups": null
    },
    {
      "containers": [
        {
          "guid": "eeeb053ffb9ff5c106add6eedcce2ea3",
          "ranking": 0,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "center",
          "loop": "",
          "spacing": "no_spacing"
        },
        {
          "guid": "747225ceb8205f4467c9e4765da47c63",
          "ranking": 1,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "center",
          "loop": "",
          "spacing": "no_spacing"
        },
        {
          "guid": "1569a594d807a5bc4e8f89de8f1aae75",
          "ranking": 2,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "no_alignment",
          "loop": "",
          "spacing": "no_spacing"
        },
        {
          "guid": "4da6aa44e05463592e2bcbfe4c042c14",
          "ranking": 3,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "center",
          "loop": "",
          "spacing": "no_spacing"
        }
      ],
      "conditions": [
        {
          "container_guids": [
            "747225ceb8205f4467c9e4765da47c63"
          ],
          "condition_type": "hide",
          "match_rule": "every_rule",
          "rules": [
            {
              "rule": "formula_is_true",
              "value": "=welcome_page.body.button = \"Super Secret \\nMngr Mode\"",
              "page_element_guid": null,
              "match_case": true
            }
          ]
        },
        {
          "container_guids": [
            "eeeb053ffb9ff5c106add6eedcce2ea3"
          ],
          "condition_type": "show",
          "match_rule": "every_rule",
          "rules": [
            {
              "rule": "formula_is_true",
              "value": "=welcome_page.body.button = \"Super Secret \\nMngr Mode\"",
              "page_element_guid": null,
              "match_case": true
            }
          ]
        }
      ],
      "fields": [
        {
          "guid": "3bcc805cf38464407d2751bcce225842",
          "name": "Heading",
          "description": "",
          "required": false,
          "type": "TITLE",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "Which Meetings Should We Take Off Their Plate?",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "eeeb053ffb9ff5c106add6eedcce2ea3",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "bf585535cce4853b2483e7c1f9de936a",
          "name": "Heading",
          "description": "",
          "required": false,
          "type": "TITLE",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "Which Meetings Should Take Off Your Plate?",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "747225ceb8205f4467c9e4765da47c63",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "48b3942fd0d9e1bf5c4a7cc70f7245d9",
          "name": "Google Calendar Events",
          "description": "",
          "required": false,
          "type": "TABLE",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "<<TO_CSV(sort)>>",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "1569a594d807a5bc4e8f89de8f1aae75",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": true,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "5563bb904a37cca867359f3432461592",
          "name": "Button",
          "description": "",
          "required": false,
          "type": "BUTTON",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "Submit",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "4da6aa44e05463592e2bcbfe4c042c14",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        }
      ],
      "visibility": "tenant",
      "agent_guid": "6ed2cfe467234be6a2eb1a7d01e4006c",
      "success_message": "",
      "loading_message": "Please wait…",
      "logo_contents": null,
      "logo_filename": null,
      "display_logo": false,
      "icon": ":lock:",
      "sso_groups": null
    },
    {
      "containers": [
        {
          "guid": "eeeb053ffb9ff5c106add6eedcce2ea3",
          "ranking": 0,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "center",
          "loop": "",
          "spacing": "no_spacing"
        },
        {
          "guid": "b97c865e61fe8ac293f4b121034b5415",
          "ranking": 1,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "no_alignment",
          "loop": "",
          "spacing": "no_spacing"
        },
        {
          "guid": "4da6aa44e05463592e2bcbfe4c042c14",
          "ranking": 2,
          "category": 0,
          "name": "Container",
          "layout": "horizontal",
          "alignment": "center",
          "loop": "",
          "spacing": "no_spacing"
        }
      ],
      "conditions": [],
      "fields": [
        {
          "guid": "3bcc805cf38464407d2751bcce225842",
          "name": "Heading",
          "description": "",
          "required": false,
          "type": "TITLE",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "<<pick_a_random_intro>>",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "eeeb053ffb9ff5c106add6eedcce2ea3",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "b43fb67a423afb2c390ae59b11123d2b",
          "name": "Paragraph",
          "description": "",
          "required": false,
          "type": "PARAGRAPH",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "Congrats on your upcoming PTO! 🎉 \nLet’s make sure your meetings are covered while you’re out.",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "b97c865e61fe8ac293f4b121034b5415",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "c66a980729880c1b916ccc06fe5225f6",
          "name": "Button",
          "description": "",
          "required": false,
          "type": "BUTTON",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "Next",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "4da6aa44e05463592e2bcbfe4c042c14",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        }
      ],
      "visibility": "tenant",
      "agent_guid": "4c40f372d37f3d3e718111062c4dcdb6",
      "success_message": "",
      "loading_message": "Please wait…",
      "logo_contents": null,
      "logo_filename": null,
      "display_logo": false,
      "icon": ":canoe:",
      "sso_groups": null
    },
    {
      "containers": [],
      "conditions": [],
      "fields": [],
      "visibility": "tenant",
      "agent_guid": "ef7dd81313c24cf0f5da0162087e750f",
      "success_message": "",
      "loading_message": "Please wait…",
      "logo_contents": null,
      "logo_filename": null,
      "display_logo": false,
      "icon": ":derelict_house_building:",
      "sso_groups": null
    },
    {
      "containers": [
        {
          "guid": "661b048d524527c7371ecd9633e03b8c",
          "ranking": 0,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "no_alignment",
          "loop": "",
          "spacing": "no_spacing"
        },
        {
          "guid": "653f4b1fce22b2dfa75fcd8b6e88224f",
          "ranking": 1,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "no_alignment",
          "loop": "",
          "spacing": "no_spacing"
        },
        {
          "guid": "8102c5cd15d4e62f19202f68444ded6c",
          "ranking": 2,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "no_alignment",
          "loop": "=SLICE(MAP(display_pto_events.output.messages,\"text\"),1, SIZE(MAP(display_pto_events.output.messages,\"text\")))",
          "spacing": "no_spacing"
        },
        {
          "guid": "64bc51e7543e4088a9acf2003daf7ad7",
          "ranking": 3,
          "category": 1,
          "name": "Container",
          "layout": "horizontal",
          "alignment": "center",
          "loop": "",
          "spacing": "no_spacing"
        }
      ],
      "conditions": [],
      "fields": [
        {
          "guid": "b688300673b77c1cdd8d5655e0996a24",
          "name": "Heading",
          "description": "",
          "required": false,
          "type": "TITLE",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "What Your Fellow CSE Needs to Know",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "661b048d524527c7371ecd9633e03b8c",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "52548df12fa5357ebbe7850ebb629038",
          "name": "Go to Vitally",
          "description": "",
          "required": false,
          "type": "EXTERNAL_LINK",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "https://tines.vitally.io/",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "653f4b1fce22b2dfa75fcd8b6e88224f",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "SMALL",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 150,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "b2a1595eb633efcb38b69c11f92403a6",
          "name": "<<META.page_elements_loop.current_value>> Info",
          "description": "",
          "required": false,
          "type": "LONG_TEXT",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": null,
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "8102c5cd15d4e62f19202f68444ded6c",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "FULL",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "a40a7d519ad2d22d19cf3437fbe4db1e",
          "name": "Vitally Note URL",
          "description": "",
          "required": false,
          "type": "URL",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 1,
          "max_characters": null,
          "default_value": null,
          "content": null,
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "8102c5cd15d4e62f19202f68444ded6c",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "LARGE",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "325d5ce7194ebcdb9b4830e916cfd8e2",
          "name": "Divider",
          "description": "",
          "required": false,
          "type": "DIVIDER",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 2,
          "max_characters": null,
          "default_value": null,
          "content": null,
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "8102c5cd15d4e62f19202f68444ded6c",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "6302917d3b0caca4a5d7f2a1b2947d2f",
          "name": "Button",
          "description": "",
          "required": false,
          "type": "BUTTON",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "Submit",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "64bc51e7543e4088a9acf2003daf7ad7",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "LARGE",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        },
        {
          "guid": "8d2692957324ebfff7df653a879a66af",
          "name": "Button",
          "description": "",
          "required": false,
          "type": "BUTTON",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 1,
          "max_characters": null,
          "default_value": null,
          "content": "Go Back",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "secondary",
          "container_guid": "64bc51e7543e4088a9acf2003daf7ad7",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        }
      ],
      "visibility": "tenant",
      "agent_guid": "33f366b4f1347735d898ff1051c960b0",
      "success_message": "",
      "loading_message": "Please wait…",
      "logo_contents": null,
      "logo_filename": null,
      "display_logo": false,
      "icon": ":chart_with_upwards_trend:",
      "sso_groups": null
    },
    {
      "containers": [
        {
          "guid": "0cfe85da01f3ca348100c4144fdf6abb",
          "ranking": 0,
          "category": 0,
          "name": "Container",
          "layout": "vertical",
          "alignment": "center",
          "loop": "",
          "spacing": "no_spacing"
        }
      ],
      "conditions": [],
      "fields": [
        {
          "guid": "1ada61426c28edbe1f0d43115980e2e7",
          "name": "Heading",
          "description": "",
          "required": false,
          "type": "TITLE",
          "multi_select": false,
          "options": [
            "Option 1",
            "Option 2"
          ],
          "ranking": 0,
          "max_characters": null,
          "default_value": null,
          "content": "🎉 You did it! 🎉",
          "validation_pattern": null,
          "validation_error_message": null,
          "style": "primary",
          "container_guid": "0cfe85da01f3ca348100c4144fdf6abb",
          "graph_type": 0,
          "graph_direction": "HORIZONTAL",
          "date_mode": "DATE",
          "store_value_as": "=password_value",
          "allow_table_row_selection": false,
          "is_searchable": false,
          "height": null,
          "image_fit": "CONTAIN",
          "min_value": 0,
          "max_value": 100,
          "step": 1,
          "width": "AUTO",
          "width_type": "FLEX_WIDTH",
          "width_fixed_px": 0,
          "boolean_label_true": "Yes",
          "boolean_label_false": "No"
        }
      ],
      "visibility": "tenant",
      "agent_guid": "65435e178f383e6ffd4b796a57d5a9f5",
      "success_message": "Thank you for your submission! \n\nA Slack message will be sent to #cse_pto_takeover momentarily",
      "loading_message": "",
      "logo_contents": null,
      "logo_filename": null,
      "display_logo": false,
      "icon": ":chart_with_upwards_trend:",
      "sso_groups": null
    }
  ],
  "tags": [],
  "time_saved_unit": "minutes",
  "time_saved_value": 0,
  "origin_story_identifier": "cloud:25906028d04ba0563447f41dccb3c4cf:e7041990861ccf449e44b1fb6f8f0723",
  "recipients": [
    "miversen@tines.io"
  ],
  "integration_product": null,
  "integration_vendor": null,
  "llm_product_instructions": "",
  "send_to_stories": [],
  "exported_at": "2025-07-02T21:00:49Z",
  "icon": ":performing_arts:"
}